-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Oct 12, 2018 at 05:03 PM
-- Server version: 10.1.36-MariaDB
-- PHP Version: 7.2.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `shareit`
--

-- --------------------------------------------------------

--
-- Table structure for table `background`
--

CREATE TABLE `background` (
  `id` int(11) NOT NULL,
  `image` varchar(200) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `background`
--

INSERT INTO `background` (`id`, `image`) VALUES
(7, 'shareit-bg-1538676037.png'),
(8, 'shareit-bg-1538676042.png'),
(9, 'shareit-bg-1538676050.png'),
(10, 'shareit-bg-1538676056.png'),
(12, 'shareit-bg-1538676400.png');

-- --------------------------------------------------------

--
-- Table structure for table `cat`
--

CREATE TABLE `cat` (
  `id` int(11) NOT NULL,
  `name` varchar(150) COLLATE utf8_unicode_ci NOT NULL,
  `parent_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `cat`
--

INSERT INTO `cat` (`id`, `name`, `parent_id`) VALUES
(1, 'Công nghệ', 0),
(2, 'Lập trình', 0),
(3, 'Tools & Tips', 0),
(4, 'Sự kiện', 0),
(6, 'Tâm sự Coder', 0),
(7, 'Java', 2),
(8, 'Android', 2),
(9, 'Ios', 2),
(10, 'Javascript', 2),
(13, 'PHP', 2),
(14, 'PHP cơ bản', 13),
(15, 'PHP nâng cao', 13),
(19, 'Machine Learning', 1),
(20, 'PHP level 1', 14);

-- --------------------------------------------------------

--
-- Table structure for table `comment`
--

CREATE TABLE `comment` (
  `id` int(11) NOT NULL,
  `content` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `user_id` int(11) NOT NULL,
  `date_create` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `active` int(1) NOT NULL DEFAULT '1',
  `parent_id` int(11) NOT NULL,
  `news_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `comment`
--

INSERT INTO `comment` (`id`, `content`, `user_id`, `date_create`, `active`, `parent_id`, `news_id`) VALUES
(87, 'Bài viết hay', 6, '2018-09-30 08:27:38', 1, 0, 12),
(88, ':D :D', 6, '2018-09-30 08:27:48', 1, 87, 12),
(89, 'Hay quá', 5, '2018-10-10 05:20:50', 0, 0, 13),
(90, 'Hay', 8, '2018-10-10 11:55:28', 1, 0, 13),
(91, 'Kaka', 8, '2018-10-10 11:55:32', 1, 90, 13),
(92, 'Hay quá', 6, '2018-10-10 12:30:41', 1, 0, 20),
(93, 'Ok', 6, '2018-10-10 12:30:47', 1, 92, 20),
(94, 'Ok', 6, '2018-10-10 12:39:35', 1, 92, 20),
(95, 'Ok', 6, '2018-10-10 12:39:35', 1, 0, 20);

-- --------------------------------------------------------

--
-- Table structure for table `contact`
--

CREATE TABLE `contact` (
  `id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `email` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `subject` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `message` varchar(250) COLLATE utf8_unicode_ci NOT NULL,
  `active` int(1) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `contact`
--

INSERT INTO `contact` (`id`, `name`, `email`, `subject`, `message`, `active`) VALUES
(9, 'Nghia Thai', 'thainghia@gmail.com', 'Test', 'Test', 0),
(10, 'Thanh Bui', 'thanhbui2727@gmail.com', 'Đặt quảng cáo', 'Tôi muốn đặt quảng cáo', 1);

-- --------------------------------------------------------

--
-- Table structure for table `news`
--

CREATE TABLE `news` (
  `id` int(11) NOT NULL,
  `name` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `preview` text COLLATE utf8_unicode_ci NOT NULL,
  `detail` text COLLATE utf8_unicode_ci NOT NULL,
  `date_create` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `created_by` int(11) NOT NULL,
  `picture` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `view` int(11) NOT NULL DEFAULT '0',
  `active` int(1) NOT NULL DEFAULT '1',
  `cat_id` int(11) NOT NULL,
  `is_slide` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `news`
--

INSERT INTO `news` (`id`, `name`, `preview`, `detail`, `date_create`, `created_by`, `picture`, `view`, `active`, `cat_id`, `is_slide`) VALUES
(5, 'Top 10 câu hỏi phỏng vấn Java thường gặp', 'Gần đây, tôi có ý tưởng muốn chia sẻ kinh nghiệm với tất cả các bạn, những người đang gặp khó khăn trong việc tìm kiếm công việc lập trình về Java.', '<h3><strong>1. Tr&ecirc;n thang điểm 10 &ndash; Bạn đ&aacute;nh gi&aacute; m&igrave;nh được bao nhi&ecirc;u điểm?</strong></h3>\r\n\r\n<p>Đ&acirc;y l&agrave; một điều rất kh&oacute; nếu bạn kh&ocirc;ng chắc chắn về bản th&acirc;n hoặc tr&igrave;nh độ th&ocirc;ng thạo của bạn trong Java. H&atilde;y hạ thấp số điểm của bạn xuống một ch&uacute;t. Sau n&agrave;y, bạn c&oacute; thể sẽ nhận được c&acirc;u hỏi theo mức độ bạn tự đ&aacute;nh gi&aacute;. Do đ&oacute;, bạn sẽ tr&aacute;nh được những c&acirc;u hỏi qu&aacute; kh&oacute; m&agrave; rất c&oacute; thể sẽ kh&ocirc;ng thể trả lời được.</p>\r\n\r\n<h3><strong>2. Bạn biết về những loại&nbsp;</strong><strong>Collection&nbsp;</strong><strong>n&agrave;o?</strong></h3>\r\n\r\n<p>Ở đ&acirc;y bạn n&ecirc;n biết về những c&aacute;i quan trọng nhất:</p>\r\n\r\n<ul>\r\n	<li>ArrayList</li>\r\n	<li>LinkedList</li>\r\n	<li>HashMap</li>\r\n	<li>HashSet</li>\r\n</ul>\r\n\r\n<p>H&atilde;y t&igrave;m hiểu về c&aacute;c collection n&agrave;y c&agrave;ng nhiều c&agrave;ng tốt, bởi v&igrave; bạn sẽ bị hỏi nhiều c&acirc;u hỏi về ch&uacute;ng</p>\r\n\r\n<h3><strong>3. Liệt k&ecirc; 5 đặc điểm bất kỳ của Java?</strong></h3>\r\n\r\n<p>Một số đặc điểm của Java l&agrave; Hướng đối tượng, Độc lập nền tảng, Th&ocirc;ng dịch, Đa luồng (Multi-thread), Robust (mạnh mẽ), Portable (khả chuyển).</p>\r\n\r\n<h3><strong>4.&nbsp;</strong><strong>Object Class</strong><strong>&nbsp;c&oacute; những&nbsp;</strong><strong>Method</strong><strong>&nbsp;n&agrave;o?</strong></h3>\r\n\r\n<p>Đ&acirc;y l&agrave; một c&acirc;u hỏi rất phổ biến được y&ecirc;u cầu để x&aacute;c định mức độ nắm vững của bạn với c&aacute;c kh&aacute;i niệm cơ bản. Đ&acirc;y l&agrave; những method m&agrave; mọi object đều c&oacute;:</p>\r\n\r\n<p>&nbsp;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\" rel=\"nofollow noopener\" target=\"_blank\"><code>Object</code></a>&nbsp;class, trong &nbsp;<code>java.lang</code>&nbsp; package, được xếp hạng gần như top thứ hạng trong class. Mỗi class sẽ l&agrave; một hậu duệ, trực tiếp hoặc gi&aacute;n tiếp, của &nbsp;<code>Object</code>&nbsp;class. Mỗi class bạn sử dụng hoặc kế thừa c&aacute;c instance method của &nbsp;<code>Object</code>. Bạn vốn kh&ocirc;ng cần sử dụng bất kỳ phương ph&aacute;p n&agrave;o trong số n&agrave;y, nhưng nếu bạn chọn l&agrave;m như vậy th&igrave; sẽ cần ghi đ&egrave; ch&uacute;ng bằng c&aacute;c code cụ thể cho class của bạn. C&aacute;c phương thức được kế thừa từ &nbsp;<code>Object</code>.được thảo luận trong phần n&agrave;y l&agrave;:</p>\r\n\r\n<ul>\r\n	<li><code>protected Object clone() throws CloneNotSupportedException</code><br />\r\n	&nbsp;Tạo v&agrave; trả về một bản sao của object n&agrave;y.</li>\r\n	<li><code>public boolean equals(Object obj)</code><br />\r\n	&nbsp;&nbsp;Cho biết một số object kh&aacute;c c&oacute; &ldquo;bằng&rdquo; với object n&agrave;y hay kh&ocirc;ng</li>\r\n	<li><code>protected void finalize() throws Throwable</code></li>\r\n</ul>\r\n\r\n<p>Được gọi bởi garbage collector tr&ecirc;n một object khi &nbsp;<code>garbagecollection</code>&nbsp;&nbsp;x&aacute;c định rằng kh&ocirc;ng c&oacute; th&ecirc;m reference đến object.</p>\r\n\r\n<ul>\r\n	<li><code>public final Class getClass()</code><br />\r\n	Returns the runtime class của 1 object.</li>\r\n	<li><code>public int hashCode()</code><br />\r\n	Return một gi&aacute; trị hash code value cho object</li>\r\n	<li><code>public String toString()</code></li>\r\n</ul>\r\n\r\n<p>&nbsp;Return một chuỗi đại diện của object.</p>\r\n\r\n<p>C&aacute;c phương thức &nbsp;<code>notify</code>,&nbsp;<code>notifyAll</code>,v&agrave; &nbsp;<code>wait</code>&nbsp;của Object đều đ&oacute;ng vai tr&ograve; đồng bộ h&oacute;a c&aacute;c hoạt động của c&aacute;c luồng chạy độc lập của thread trong một chương tr&igrave;nh. C&oacute; năm method sau:</p>\r\n\r\n<ul>\r\n	<li><code>public final void notify()</code></li>\r\n	<li><code>public final void notifyAll()</code></li>\r\n	<li><code>public final void wait()</code></li>\r\n	<li><code>public final void wait(long timeout)</code></li>\r\n	<li><code>public final void wait(long timeout, int nanos)</code></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><strong>5. Tại sao&nbsp;</strong><strong>String Object&nbsp;</strong><strong>kh&ocirc;ng thể thay đổi (</strong><strong>Immutable</strong><strong>) trong Java?</strong></h3>\r\n\r\n<ol>\r\n	<li><a href=\"https://www.journaldev.com/797/what-is-java-string-pool\" rel=\"nofollow\" target=\"_new\">String pool</a>&nbsp;&nbsp;l&agrave; c&oacute; thể bởi v&igrave; String l&agrave; bất biến trong Java. Bằng c&aacute;ch n&agrave;y, Java Runtime tiết kiệm rất nhiều khoảng trống trong Java heap space, bởi v&igrave; c&aacute;c String variable kh&aacute;c nhau c&oacute; thể tham chiếu đến c&ugrave;ng một biến String variable trong string pool. Nếu String kh&ocirc;ng phải l&agrave; bất biến, th&igrave; việc thực hiện chuỗi sẽ kh&ocirc;ng diễn ra được, bởi v&igrave; nếu bất kỳ variable n&agrave;o thay đổi gi&aacute; trị, n&oacute; sẽ cũng g&acirc;y ảnh hưởng l&ecirc;n c&aacute;c variable kh&aacute;c.</li>\r\n	<li>Nếu String kh&ocirc;ng phải l&agrave; bất biến, th&igrave; n&oacute; sẽ g&acirc;y ra một mối đe dọa bảo mật nghi&ecirc;m trọng cho ứng dụng. V&iacute; dụ, t&ecirc;n người d&ugrave;ng v&agrave; mật khẩu cơ sở dữ liệu được chuyển th&agrave;nh String để c&oacute; được kết nối cơ sở dữ liệu, m&aacute;y chủ lập tr&igrave;nh trong socket v&agrave; c&aacute;c chi tiết của portal được chuyển th&agrave;nh String. V&igrave; Chuỗi kh&ocirc;ng thể thay đổi n&ecirc;n kh&ocirc;ng thể thay đổi c&aacute;c gi&aacute; trị n&agrave;y. Nếu kh&ocirc;ng, bất kỳ tin tặc n&agrave;o cũng c&oacute; thể thay đổi gi&aacute; trị được tham chiếu để g&acirc;y ra c&aacute;c vấn đề bảo mật trong ứng dụng.</li>\r\n	<li>V&igrave; String l&agrave; bất biến, n&oacute; cũng an to&agrave;n cho&nbsp;multithreading, v&agrave; một c&aacute; thể String đơn c&oacute; thể được chia sẻ qua c&aacute;c thread kh&aacute;c nhau. Điều n&agrave;y gi&uacute;p tr&aacute;nh việc sử dụng đồng bộ h&oacute;a cho thread safety.</li>\r\n	<li>C&aacute;c chuỗi được sử dụng trong &nbsp;Java classloader, v&agrave; t&iacute;nh bất biến bảo đảm rằng class đ&uacute;ng sẽ được load bởi&nbsp;<code>Classloader</code>..</li>\r\n	<li>V&igrave; String l&agrave; bất biến, n&ecirc;n&nbsp;<strong>hashcode</strong>&nbsp;của n&oacute; được lưu v&agrave;o bộ nhớ cache tại thời điểm tạo v&agrave; kh&ocirc;ng cần phải t&iacute;nh lại. Điều n&agrave;y l&agrave;m cho n&oacute; trở th&agrave;nh một ứng cử vi&ecirc;n tuyệt vời để l&agrave;m key trong map, v&agrave; qu&aacute; tr&igrave;nh xử l&yacute; của n&oacute; cũng nhanh hơn c&aacute;c &nbsp;<code>HashMap</code>&nbsp;key object kh&aacute;c. Đ&acirc;y l&agrave; l&yacute; do tại sao String l&agrave; object được sử dụng nhiều nhất của c&aacute;c &nbsp;<code>HashMap</code>&nbsp;key</li>\r\n</ol>\r\n\r\n<h3><strong>6. Sự kh&aacute;c biệt giữa Final, Finally, v&agrave; Finalize l&agrave; g&igrave;?</strong></h3>\r\n\r\n<p>Đ&acirc;y l&agrave; c&acirc;u hỏi y&ecirc;u th&iacute;ch của t&ocirc;i.</p>\r\n\r\n<p><em>final&nbsp;</em>keyword được sử dụng trong một số ngữ cảnh để x&aacute;c định một thực thể chỉ c&oacute; thể được g&aacute;n một lần.</p>\r\n\r\n<p><strong>The Java<strong>&nbsp;<code>finally</code>&nbsp;</strong>block</strong>&nbsp;l&agrave; một khối được sử dụng để thực thi m&atilde; quan trọng, chẳng hạn như đ&oacute;ng kết nối, luồng, vv The Java&nbsp;<strong>&nbsp;<code>finally</code>&nbsp;</strong>&nbsp;block lu&ocirc;n được thực thi, cho d&ugrave; l&agrave; c&oacute; ngoại lệ hay kh&ocirc;ng.</p>\r\n\r\n<p>Đ&acirc;y l&agrave; một&nbsp;<strong>method</strong>&nbsp;m&agrave;&nbsp;<code>GarbageCollector</code>&nbsp;lu&ocirc;n gọi ngay trước khi x&oacute;a / hủy object, n&oacute; đủ điều kiện để Garbage Collection thực hiện hoạt động dọn dẹp.</p>\r\n\r\n<h3><strong>7. Vấn đề Diamond Problem l&agrave; g&igrave;?</strong></h3>\r\n\r\n<p>Vấn đề Diamond Problem phản &aacute;nh tại sao ch&uacute;ng ta kh&ocirc;ng được ph&eacute;p l&agrave;m nhiều inheritance trong Java. Nếu hai class c&oacute; c&ugrave;ng một superclass được chia sẻ với một phương thức cụ thể, n&oacute; sẽ ghi đ&egrave; l&ecirc;n cả hai lớp con. Sau đ&oacute;, nếu bạn quyết định kế thừa từ hai &nbsp;<code>subClasses</code>&nbsp;đ&oacute;, th&igrave; ng&ocirc;n ngữ đ&oacute; kh&ocirc;ng thể quyết định c&aacute;i n&agrave;o bạn muốn gọi.</p>\r\n', '2018-09-27 15:33:22', 5, 'shareit-1537112467.jpg', 12, 1, 4, 0),
(6, 'Thủ thuật xử lý dữ liệu lớn trong PHP', 'Trong quá trình học và làm việc với ngôn ngữ lập trình PHP, ắt hẳn bạn đã từng đau đầu khi gặp vấn đề cần xử lý dữ liệu lớn trong PHP', '<p>Trong qu&aacute; tr&igrave;nh học v&agrave; l&agrave;m việc với ng&ocirc;n ngữ lập tr&igrave;nh&nbsp;PHP, ắt hẳn bạn đ&atilde; từng đau đầu khi gặp vấn đề cần xử l&yacute; dữ liệu lớn trong PHP</p>\r\n\r\n<p>Một vấn đề cụ thể thường thấy đ&oacute; l&agrave; khi bạn cần phải đọc một file dữ liệu l&ecirc;n đến h&agrave;ng triệu d&ograve;ng v&agrave; insert dữ liệu n&agrave;y v&agrave;o cơ sở dữ liệu. Vậy th&igrave; c&aacute;ch giải quyết vấn đề n&agrave;y như thế n&agrave;o ?</p>\r\n\r\n<h3><strong>Đưa ra giải ph&aacute;p xử l&yacute; dữ liệu lớn trong PHP</strong></h3>\r\n\r\n<p>Để giải quyết vấn đề xử l&yacute; dữ liệu lớn trong PHP th&igrave; ch&uacute;ng ta sẽ &aacute;p dụng thủ thuật chia để trị để xử l&yacute; dữ liệu lớn, tức l&agrave; sẽ đọc từng phần của một file dữ liệu.</p>\r\n\r\n<p>M&igrave;nh lấy v&iacute; dụ bạn cần đọc một file dữ li&ecirc;u l&agrave; xml chứa 2 triệu d&ograve;ng, việc đọc 1 lần v&agrave; đưa dữ liệu v&agrave;o cơ sở dữ liệu sẽ l&agrave;m chậm hệ thống v&agrave; rất mất thời gian, bởi lẽ khi đọc 2 triệu d&ograve;ng dữ liệu, hệ thống của bạn phải d&agrave;nh hết c&ocirc;ng suất để đọc 2 triệu d&ograve;ng n&agrave;y, khiến cho hệ thống phải chờ để xử l&yacute;, do vậy l&agrave;m ảnh hưởng đến những c&ocirc;ng việc kh&aacute;c đang cần chờ xử l&yacute; tiếp theo. Hơn nữa, đọc 1 l&uacute;c 2 triệu d&ograve;ng dữ liệu v&agrave; đưa v&agrave;o cơ sở dữ liệu sẽ c&oacute; thể g&acirc;y chết hệ thống của bạn.</p>\r\n\r\n<p>Ch&iacute;nh v&igrave; thế, thay v&igrave; đọc 1 l&uacute;c 2 triệu d&ograve;ng&nbsp;dữ liệu, ch&uacute;ng ta c&oacute; thể chia ra đọc th&agrave;nh từng phần theo từng khoảng thời gian kh&aacute;c nhau, chẳng hạn mỗi lần đọc khoảng 5 ph&uacute;t l&agrave; nghỉ, rồi 5 ph&uacute;t tiếp theo lại đọc tiếp d&ograve;ng dữ liệu tiếp theo trở đi, cứ thế đọc cho đến hết 2 triệu d&ograve;ng dữ liệu. Giải ph&aacute;p n&agrave;y sẽ gi&uacute;p cho việc xử l&yacute; dữ liệu lớn trở n&ecirc;n dễ d&agrave;ng v&agrave; nhẹ nh&agrave;ng hơn.</p>\r\n\r\n<h3><strong>Thực thi giải ph&aacute;p xử l&yacute; dữ liệu lớn trong PHP</strong></h3>\r\n\r\n<p>Ở phần tr&ecirc;n m&igrave;nh đ&atilde; đưa ra giải ph&aacute;p. Trong phần n&agrave;y ch&uacute;ng ta sẽ tiến h&agrave;nh thực thi, hiện thực h&oacute;a giải ph&aacute;p một c&aacute;c cụ thể hơn.</p>\r\n\r\n<p><strong>a. Thuật to&aacute;n</strong></p>\r\n\r\n<p>Thuật to&aacute;n để giải quyết vấn đề tr&ecirc;n đ&oacute; l&agrave; với 2 triệu d&ograve;ng dữ liệu trong file xml ch&uacute;ng ta sẽ l&agrave;m như sau:</p>\r\n\r\n<ol>\r\n	<li>Set khoảng thời gian tối đ&atilde; cho mỗi lần đọc l&agrave; 5 ph&uacute;t</li>\r\n	<li>Sau khi đọc 5 ph&uacute;t, lưu lại vị tr&iacute; index đ&atilde; dừng</li>\r\n	<li>Tiếp tục đọc từ vị tr&iacute; đ&atilde; dừng</li>\r\n	<li>Lặp lại bước 1,2</li>\r\n	<li>Kiểm tra thời gian đọc nếu &lt; 5 ph&uacute;t tức l&agrave; đ&atilde; đọc hết file dữ liệu xml</li>\r\n	<li>Dừng việc đọc dữ liệu</li>\r\n</ol>\r\n\r\n<p><strong>b. Tiến h&agrave;nh code hiện thực h&oacute;a vấn đề&nbsp;<br />\r\n&nbsp;c. Giải th&iacute;ch</strong></p>\r\n\r\n<p>Ở đoạn code tr&ecirc;n m&igrave;nh khởi tạo 4 tham số l&agrave; :</p>\r\n\r\n<ol>\r\n	<li>$max_time : Số thời gian tối đa cho mỗi lần thực thi</li>\r\n	<li>$start_time : Thời điểm bắt đầu xử l&yacute;</li>\r\n	<li>$running_time : Thời điểm xử l&yacute;</li>\r\n	<li>$continue : Vị tr&iacute; index đ&atilde; dừng v&agrave; tiếp tục</li>\r\n</ol>\r\n\r\n<p>Khi v&ograve;ng lặp foreach chạy v&agrave; duyệt từng node của file xml v&agrave; tiến h&agrave;nh đọc dữ liệu để lưu v&agrave;o cơ sở dữ liệu, song song đ&oacute; ta sẽ check xem thời gian v&ograve;ng lặp chạy c&oacute; qu&aacute; thời gian tối đa cho ph&eacute;p l&agrave; tối đa 5 ph&uacute;t hay kh&ocirc;ng bằng đoạn code<br />\r\nNếu đ&atilde; qu&aacute; thời gian cho ph&eacute;p th&igrave; sẽ tiến h&agrave;nh tho&aacute;t khỏi v&ograve;ng lặp bằng lệnh break, sau khi tho&aacute;t khỏi v&ograve;ng lặp ta sẽ tiến h&agrave;nh lưu vị tr&iacute; index đ&atilde; dừng<br />\r\nỞ lần chaỵ code lần 2, khi chạy lại to&agrave;n bộ đoạn code tr&ecirc;n, ch&uacute;ng ta sẽ tiến h&agrave;nh kiểm tra xem c&aacute;c vị tr&iacute; đ&atilde; đọc rồi th&igrave; bỏ qua v&agrave; kh&ocirc;ng đọc nữa bằng c&acirc;u lệnh continue v&agrave; như vậy code sẽ chỉ chạy từ thời điểm dừng $continue_point trở đi m&agrave; th&ocirc;i.</p>\r\n\r\n<h3>B&agrave;i viết n&agrave;y m&igrave;nh chia sẽ một thủ thuật nho nhỏ gi&uacute;p bạn xử l&yacute; dữ liệu lớn trong PHP. Đ&acirc;y l&agrave; một thủ thuật rất c&oacute; &iacute;ch cho bạn trong qu&aacute; tr&igrave;nh l&agrave;m việc với c&aacute;c hệ thống lớn v&agrave; y&ecirc;u cầu xử l&yacute; dữ liệu lớn</h3>\r\n\r\n<p>Thủ thuật n&agrave;y sẽ l&agrave;m giảm tải &aacute;p lực l&ecirc;n hệ thống của bạn, gi&uacute;p n&oacute; chạy mượt v&agrave; đỡ tốn thời gian đợi hơn.</p>\r\n', '2018-10-04 13:11:56', 6, 'shareit-1537112407.jpg', 14, 1, 13, 0),
(7, 'Lập trình hướng đối tượng với PHP và những điều cần biết (phần 1)', 'Các đặc điểm cơ bản của lập trình hướng đối tượng. Chúng được thể hiện như thế nào trong PHP', '<h3><strong>1. C&aacute;c đặc điểm cơ bản của lập tr&igrave;nh hướng đối tượng. Ch&uacute;ng được thể hiện như thế n&agrave;o trong PHP</strong></h3>\r\n\r\n<p>Lập tr&igrave;nh hướng đối tượng c&oacute; 4 đặc điểm cơ bản sau.</p>\r\n\r\n<h3>T&iacute;nh đ&oacute;ng g&oacute;i</h3>\r\n\r\n<ul>\r\n	<li>T&iacute;nh đ&oacute;ng g&oacute;i (encapsulation) &ldquo;đ&oacute;ng g&oacute;i&rdquo; thuộc t&iacute;nh v&agrave; phương thức của đối tượng (hoặc lớp) th&ocirc;ng qua việc giới hạn quyền truy cập (hoặc thay đổi) gi&aacute; trị của thuộc t&iacute;nh hoặc quyền gọi phương thức. N&oacute;i c&aacute;ch kh&aacute;c t&iacute;nh đ&oacute;ng g&oacute;i cho ph&eacute;p kiểm so&aacute;t quyền truy cập (v&agrave; thay đổi) gi&aacute; trị của thuộc t&iacute;nh hoặc quyền gọi phương thức của đối tượng (hoặc lớp) v&agrave; đối tượng (hoặc lớp) con.</li>\r\n	<li>Trong PHP việc đ&oacute;ng g&oacute;i được thực hiện nhờ sử dụng c&aacute;c từ kho&aacute;&nbsp;<code>public</code>,&nbsp;<code>private</code>&nbsp;v&agrave;&nbsp;<code>protected</code>:\r\n	<ul>\r\n		<li><code>public</code>: Cho ph&eacute;p truy cập (v&agrave; thay đổi gi&aacute; trị) của thuộc t&iacute;nh v&agrave; phương thức ở mọi phạm vi, c&oacute; thể hiểu l&agrave; mang đặc t&iacute;nh cộng đồng.</li>\r\n		<li><code>protected</code>: Chỉ cho ph&eacute;p truy cập (hay thay đổi) gi&aacute; trị của thuộc t&iacute;nh v&agrave; phương thức ở phạm vi của đối tượng con (hoặc lớp con), c&oacute; thể hiểu l&agrave; mang đặc t&iacute;nh d&ograve;ng họ.</li>\r\n		<li><code>private</code>: Chỉ cho ph&eacute;p truy cập (hay thay đổi) gi&aacute; trị của thuộc t&iacute;nh v&agrave; phương thức ở phạm vi của đối tượng (hoặc lớp), c&oacute; thể hiểu l&agrave; mang đặc t&iacute;nh gia đ&igrave;nh.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3>T&iacute;nh kế thừa</h3>\r\n\r\n<ul>\r\n	<li>T&iacute;nh kế thừa trong lập tr&igrave;nh hướng đối tượng cho ph&eacute;p một lớp (class) c&oacute; thể kế thừa c&aacute;c thuộc t&iacute;nh v&agrave; phương thức từ c&aacute;c lớp kh&aacute;c đ&atilde; được định nghĩa. Lớp được kế thừa c&ograve;n được gọi l&agrave; lớp cha v&agrave; lớp kế thừa được gọi l&agrave; lớp con.</li>\r\n	<li>Điều n&agrave;y cho ph&eacute;p c&aacute;c đối tượng c&oacute; thể t&aacute;i sử dụng hay mở rộng c&aacute;c đặc t&iacute;nh sẵn c&oacute; m&agrave; kh&ocirc;ng phải tiến h&agrave;nh định nghĩa lại.</li>\r\n	<li>Trong PHP, một lớp c&oacute; thể kế thừa từ một lớp kh&aacute;c, việc kế thừa được thực hiện th&ocirc;ng qua sử dụng từ kh&oacute;a&nbsp;<code>extends</code>. Đối tượng thuộc lớp con sẽ c&oacute; c&aacute;c thuộc t&iacute;nh v&agrave; phương thức&nbsp;<code>protected</code>&nbsp;v&agrave;&nbsp;<code>public</code>&nbsp;của lớp m&agrave; n&oacute; kế thừa.</li>\r\n</ul>\r\n\r\n<h3>T&iacute;nh trừu tượng</h3>\r\n\r\n<ul>\r\n	<li>T&iacute;nh trừu tượng (abstraction) trong lập tr&igrave;nh hướng đối tượng gi&uacute;p giảm sự phức tạp th&ocirc;ng qua việc tập trung v&agrave;o c&aacute;c đặc điểm trọng yếu hơn l&agrave; đi s&acirc;u v&agrave;o chi tiết.</li>\r\n	<li>Như vậy khi tương t&aacute;c với đối tượng chỉ cần quan t&acirc;m đến c&aacute;c thuộc t&iacute;nh, phương thức cần thiết. Chi tiết về nội dung kh&ocirc;ng cần ch&uacute; &yacute; đến.</li>\r\n	<li>PHP c&oacute;&nbsp;<code>abstract class</code>&nbsp;v&agrave;&nbsp;<code>interface</code>&nbsp;để trừu tượng h&oacute;a c&aacute;c đối tượng. V&iacute; dụ khi ta tạo một lớp (class) d&ugrave;ng đại di&ecirc;n cho c&aacute;c t&agrave;i khoản tiền gửi ng&acirc;n h&agrave;ng của c&aacute;c kh&aacute;ch h&agrave;ng v&agrave; đặt t&ecirc;n cho lớp n&agrave;y l&agrave;&nbsp;<code>BankAccount</code>. Lớp n&agrave;y c&oacute; hai thuộc t&iacute;nh l&agrave;&nbsp;<code>$balance</code>&nbsp;v&agrave;&nbsp;<code>$interest</code>&nbsp;d&ugrave;ng để lưu dữ liệu số tiền dư v&agrave; l&atilde;i suất tiền gửi của t&agrave;i khoản.</li>\r\n</ul>\r\n\r\n<p>Với t&iacute;nh trừu tượng (abstraction) th&igrave; to&agrave;n bộ sự phức tạp của việc xử l&yacute; qu&aacute; tr&igrave;nh gửi tiền v&agrave; r&uacute;t tiền sẽ được thực hiện trong 2 phương thức&nbsp;<code>deposit</code>&nbsp;v&agrave;&nbsp;<code>withdraw</code>. C&aacute;c lập tr&igrave;nh vi&ecirc;n kh&ocirc;ng cần phải quan t&acirc;m tới sự phức tạp (hay nội dung chi tiết) của việc xử l&yacute; c&aacute;c c&ocirc;ng việc gửi tiền v&agrave; r&uacute;t tiền tr&ecirc;n m&agrave; chỉ cần biết mục đ&iacute;ch của từng phương thức l&agrave; g&igrave;.</p>\r\n\r\n<p>Với t&iacute;nh trừu tượng th&igrave; lập tr&igrave;nh vi&ecirc;n chỉ cần quan t&acirc;m tới mục đ&iacute;ch của phương thức&nbsp;<code>deposit</code>&nbsp;l&agrave; để nạp tiền v&agrave;o t&agrave;i khoản. To&agrave;n bộ chi tiết của quy tr&igrave;nh xử l&yacute; gửi tiền sẽ được thực hiện ở b&ecirc;n trong phương thức&nbsp;<code>deposit</code>.</p>\r\n\r\n<h3>T&iacute;nh đa h&igrave;nh</h3>\r\n\r\n<ul>\r\n	<li>Thể hiện qua việc c&oacute; thể định nghĩa một đặc t&iacute;nh, hoặc phương thức cho một loạt c&aacute;c đối tượng gần giống nhau. Nhưng khi thực hiện th&igrave; c&aacute;c đối tượng kh&aacute;c nhau sẽ c&oacute; c&aacute;ch thực hiện kh&aacute;c nhau v&agrave; cho ra kết quả kh&aacute;c nhau.</li>\r\n	<li>T&iacute;nh đa h&igrave;nh (polymorphism) trong lập tr&igrave;nh hướng đối tượng cho ph&eacute;p c&aacute;c lớp con c&oacute; thể viết lại (override) c&aacute;c thuộc t&iacute;nh hoặc phương thức từ lớp cha. V&iacute; dụ: Đối tượng &ldquo;h&igrave;nh vu&ocirc;ng&rdquo; v&agrave; &ldquo;h&igrave;nh tr&ograve;n&rdquo; c&oacute; chung 1 phương thức l&agrave; &ldquo;chu_vi&rdquo;. Khi gọi phương thức n&agrave;y th&igrave; với mỗi đối tượng sẽ c&oacute; 1 c&ocirc;ng thức t&iacute;nh kh&aacute;c nhau v&agrave; cho ra kết quả kh&aacute;c nhau. Trong PHP:\r\n	<ul>\r\n		<li>C&aacute;c lớp con c&oacute; thể viết lại hoặc mở rộng phương thức của lớp cha m&agrave; n&oacute; kế thừa.</li>\r\n		<li>C&aacute;c class c&ugrave;ng implement một interface nhưng ch&uacute;ng c&oacute; c&aacute;ch thức thực hiện kh&aacute;c nhau cho c&aacute;c method của interface đ&oacute;.</li>\r\n		<li>Qua đ&oacute; c&ugrave;ng 1 phương thức sẽ cho kết quả kh&aacute;c nhau khi được gọi bởi c&aacute;c đối tượng thuộc lớp kh&aacute;c nhau.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3><strong>2. Sự kh&aacute;c biệt giữa&nbsp;<code>Abstract Class</code>&nbsp;v&agrave;&nbsp;<code>Interface</code></strong></h3>\r\n\r\n<p><code>Interface</code>&nbsp;v&agrave;&nbsp;<code>Abstract class</code>&nbsp;l&agrave; 2 kh&aacute;i niệm cơ bản trong lập tr&igrave;nh OOP. Nhưng ph&acirc;n lớn mọi người cảm thấy mơ hồ v&agrave; lẫn lộn 2 kh&aacute;i niệm n&agrave;y. Vậy ch&uacute;ng l&agrave; g&igrave;, kh&aacute;c nhau như n&agrave;o? Tại sao d&ugrave;ng c&aacute;i n&agrave;y&nbsp;<code>Interface</code>&nbsp;m&agrave; kh&ocirc;ng phải&nbsp;<code>Abstract</code>&nbsp;v&agrave; ngược lại ??? Bỏ qua tất cả những phần về l&yacute; thuyết của việc tạo một&nbsp;<code>abstract class</code>&nbsp;v&agrave;&nbsp;<code>interface</code>. Bạn kh&ocirc;ng cần quan t&acirc;m nhiều đến việc&nbsp;<code>abstract</code>&nbsp;c&oacute; thể khai b&aacute;o những g&igrave;, hay&nbsp;<code>interface</code>&nbsp;c&oacute; được ph&eacute;p định nghĩa nội dung phương thức hay kh&ocirc;ng. Điểm cơ bản khi bạn được hỏi về sự kh&aacute;c biệt giữa ch&uacute;ng l&agrave; g&igrave;? Đ&oacute; ch&iacute;nh l&agrave; mục đ&iacute;ch m&agrave; ch&uacute;ng được sử dụng: &ndash;&nbsp;<code>Abstract class</code>: l&agrave; một class cha cho tất cả c&aacute;c class c&oacute; c&ugrave;ng bản chất. Bản chất ở đ&acirc;y được hiểu l&agrave; kiểu, loại, nhiệm vụ của class. Hai class c&ugrave;ng hiện thực một&nbsp;<code>interface</code>c&oacute; thể ho&agrave;n to&agrave;n kh&aacute;c nhau về bản chất. Hiểu đơn giản như một thằng con (child class) chỉ c&oacute; thể l&agrave; con của một thằng cha, c&oacute; t&iacute;nh c&aacute;ch giống cha (abstract class) n&oacute;. &ndash;&nbsp;<code>Interface</code>: l&agrave; một chức năng m&agrave; bạn c&oacute; thể th&ecirc;m v&agrave; bất k&igrave; class n&agrave;o. Từ chức năng ở đ&acirc;y kh&ocirc;ng đồng nghĩa với phương thức (hoặc h&agrave;m).&nbsp;<code>Interface</code>&nbsp;c&oacute; thể bao gồm nhiều h&agrave;m/phương thức v&agrave; tất cả ch&uacute;ng c&ugrave;ng phục vụ cho một chức năng. Vậy, bạn kh&ocirc;ng n&ecirc;n nhầm lẫn khi n&oacute;i về việc một class được&nbsp;<code>implement</code>&nbsp;hay&nbsp;<code>extend</code>. Nhiều người thường hay đồng nhất l&agrave; kh&ocirc;ng ph&acirc;n biệt hai từ n&agrave;y, nhưng ch&iacute;nh ch&uacute;ng đ&atilde; n&oacute;i l&ecirc;n sự kh&aacute;c biệt giữa&nbsp;<code>interface</code>&nbsp;v&agrave;&nbsp;<code>abstract class</code>. Bạn chỉ c&oacute; thể thừa kế (<code>extend</code>) từ một class v&agrave; chỉ c&oacute; thể hiện thực (<code>implement</code>) c&aacute;c chức năng (<code>interface</code>) cho class của m&igrave;nh.</p>\r\n\r\n<p>Cuối c&ugrave;ng, cũng n&ecirc;n liệt k&ecirc; c&aacute;c điểm kh&aacute;c biệt giữa hai kh&aacute;i niệm n&agrave;y để bạn c&oacute; thể sử dụng được khi cần thiết. C&aacute;c điểm kh&aacute;c biệt n&agrave;y c&oacute; thể kh&aacute;c nhau t&ugrave;y v&agrave;o ng&ocirc;n ngữ m&agrave; bạn sử dụng. V&igrave; vậy bạn chỉ cần nhớ c&aacute;c điểm căn bản sau:</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>&nbsp;</th>\r\n			<th>Interface</th>\r\n			<th>Abstract class</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>Multiple inheritance</td>\r\n			<td>Một class c&oacute; thể hiện thực nhiều interface.(tạm coi l&agrave; thừa kế)</td>\r\n			<td>Kh&ocirc;ng hỗ trợ đa thừa kế</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Access Modifiers</td>\r\n			<td>Mọi phương thức, property đều mặc định l&agrave; public.</td>\r\n			<td>C&oacute; thể x&aacute;c định modifier.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Adding functionality</td>\r\n			<td>Mọi phương thức, property của interface cần được hiện thực trong class.</td>\r\n			<td>Kh&ocirc;ng cần thiết.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Fields and Constants</td>\r\n			<td>Kh&ocirc;ng</td>\r\n			<td>C&oacute;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<blockquote>\r\n<p>Nếu một class&nbsp;<code>implements</code>&nbsp;nhiều&nbsp;<code>interface</code>&nbsp;m&agrave; c&aacute;c&nbsp;<code>interface</code>&nbsp;c&oacute; những phương thức c&ugrave;ng t&ecirc;n th&igrave; sẽ kh&ocirc;ng lỗi nếu c&aacute;c phương thức đ&oacute; truyền v&agrave;o số lượng biến bằng nhau. C&ograve;n nếu c&aacute;c phương thức đ&oacute; kh&aacute;c số lượng biến truyền v&agrave;o th&igrave; sẽ sinh ra lỗi &ldquo;Fatal error&rdquo;.</p>\r\n</blockquote>\r\n\r\n<h3><strong>3. Thế n&agrave;o l&agrave; một phương thức&nbsp;<code>static</code>. Ph&acirc;n biệt c&aacute;ch d&ugrave;ng từ kho&aacute;&nbsp;<code>static::method()</code>&nbsp;với&nbsp;<code>self::method()</code></strong></h3>\r\n\r\n<h3>Phương thức&nbsp;<code>static</code></h3>\r\n\r\n<ul>\r\n	<li>Phương thức&nbsp;<code>static</code>&nbsp;l&agrave; phương thức c&oacute; thể truy cập m&agrave; kh&ocirc;ng cần khởi tạo một đối tượng của class.</li>\r\n	<li>Phương thức&nbsp;<code>static</code>&nbsp;gắn liền với&nbsp;<code>class</code>&nbsp;hơn l&agrave; với&nbsp;<code>object</code>&nbsp;(l&agrave; th&agrave;nh phần khởi tạo&nbsp;<code>class</code>bằng từ kh&oacute;a&nbsp;<code>new</code>), đ&acirc;y l&agrave; những phương thức chỉ c&oacute; một, c&oacute; địa chỉ x&aacute;c định v&agrave; kh&ocirc;ng thay đổi địa chỉ tr&ecirc;n v&ugrave;ng nhớ (tĩnh).</li>\r\n	<li>Khi chương tr&igrave;nh chạy, n&oacute; sẽ được sinh ra đầu ti&ecirc;n trước tất cả c&aacute;c truy nhập tới n&oacute; v&agrave; tồn tại cho tới khi chương tr&igrave;nh kết th&uacute;c.</li>\r\n</ul>\r\n\r\n<blockquote>\r\n<blockquote>\r\n<p>Việc thực thi h&agrave;m&nbsp;<code>static</code>&nbsp;trong&nbsp;<code>class</code>&nbsp;c&oacute; thể thực hiện bằng lệnh:&nbsp;<code>static::staticMethod()</code>,&nbsp;<code>self::staticMethod()</code>&nbsp;hoặc&nbsp;<code>$this-&gt;staticMethod()</code>, trong đ&oacute;&nbsp;<code>self</code>&nbsp;v&agrave;&nbsp;<code>static</code>&nbsp;l&agrave; đại diện của&nbsp;<code>class</code>, c&ograve;n&nbsp;<code>$this</code>&nbsp;l&agrave; đại diện của&nbsp;<code>object</code>. Trong phương thức&nbsp;<code>static</code>&nbsp;kh&ocirc;ng thể gọi phương thức hoặc thuộc t&iacute;nh&nbsp;<code>non-static</code>. Nhưng phương thức&nbsp;<code>non-static</code>&nbsp;c&oacute; thể gọi phương thức hoặc thuộc t&iacute;nh&nbsp;<code>static</code>. Bởi v&igrave; c&oacute; thể hiểu đơn giản như sau:</p>\r\n</blockquote>\r\n\r\n<ul>\r\n	<li>Phương thức&nbsp;<code>static</code>&nbsp;c&oacute; thể gọi ngay cả khi chưa khởi tạo&nbsp;<code>object</code>, do đ&oacute; nếu phương thức&nbsp;<code>static</code>&nbsp;gọi đến một phương thức&nbsp;<code>non-static</code>&nbsp;th&igrave; khi chưa khởi tạo&nbsp;<code>object</code>, sẽ kh&ocirc;ng c&oacute; biến&nbsp;<code>$this</code>&nbsp;(l&agrave; đại diện của&nbsp;<code>object</code>) để gọi đến phương thức &lsquo;non-static`.</li>\r\n	<li>Đương nhi&ecirc;n phương thức&nbsp;<code>non-static</code>&nbsp;lu&ocirc;n lu&ocirc;n c&oacute; thể gọi đến phương thức&nbsp;<code>static</code>&nbsp;v&igrave; phương thức&nbsp;<code>static</code>&nbsp;đ&atilde; tồn tại ngay từ khi chạy chương tr&igrave;nh, khi&nbsp;<code>object</code>&nbsp;chưa được khởi tạo.</li>\r\n</ul>\r\n</blockquote>\r\n\r\n<h3>Ph&acirc;n biệt c&aacute;ch d&ugrave;ng từ kho&aacute;&nbsp;<code>static::method()</code>&nbsp;với&nbsp;<code>self::method()</code></h3>\r\n\r\n<p>Như ở tr&ecirc;n ch&uacute;ng ta c&oacute; nhắc đến từ kh&oacute;a&nbsp;<code>static::method()</code>&nbsp;với&nbsp;<code>self::method()</code>, ch&uacute;ng đều l&agrave; đại diện cho&nbsp;<code>class</code>&nbsp;để gọi đến c&aacute;c phương thức v&agrave; thuộc t&iacute;nh&nbsp;<code>static</code>. C&acirc;u hỏi đặt ra l&agrave;&nbsp;<code>Thế tại sao lại phải c&oacute; tới 2 từ kh&oacute;a?</code>. Nếu chỉ đơn thuần như trong nội bộ&nbsp;<code>class</code>&nbsp;th&igrave; cả 2 từ kh&oacute;a tr&ecirc;n đều cho ra kết quả giống nhau. Nhưng ch&uacute;ng c&oacute; thể sẽ kh&aacute;c nhau nếu khi&nbsp;<code>class</code>&nbsp;n&agrave;y&nbsp;<code>extends</code>&nbsp;từ&nbsp;<code>class</code>&nbsp;kh&aacute;c.</p>\r\n\r\n<p>N&oacute;i t&oacute;m lại:</p>\r\n\r\n<ul>\r\n	<li><code>self</code>: đại diện cho class&nbsp;<code>khai b&aacute;o</code>&nbsp;n&oacute;.</li>\r\n	<li><code>static</code>: đại diện cho class&nbsp;<code>gọi</code>&nbsp;đến n&oacute;.</li>\r\n</ul>\r\n', '2018-09-30 04:21:10', 6, 'shareit-1538030413.jpg', 15, 1, 13, 0),
(8, 'Apple vất vả tìm hướng đi cho dịch vụ streaming của họ', 'Năm ngoái, một nhà đầu tư dự đoán rằng Apple sẽ chi tới 4,2 tỷ đô la cho dịch vụ streaming media ', '<p>Năm ngo&aacute;i, một nh&agrave; đầu tư dự đo&aacute;n rằng Apple sẽ chi tới 4,2 tỷ đ&ocirc; la cho dịch vụ streaming media trong 2022, nhưng nếu những đ&aacute;nh gi&aacute; gần đ&acirc;y về c&aacute;c nội dung đ&oacute; l&agrave; ch&iacute;nh x&aacute;c th&igrave; c&oacute; lẽ c&ocirc;ng ty sẽ phải nghĩ lại quyết định của m&igrave;nh.</p>\r\n\r\n<p>Một b&agrave;i b&aacute;o tr&ecirc;n tờ Wall Street Journal đ&atilde; chỉ ra một số nguy cơ m&agrave; Apple phải đối mặt khi tạo ra một dịch vụ streaming media trong thời đại m&agrave; v&ocirc; số c&aacute;c đối thủ nặng k&iacute; li&ecirc;n tục xuất hiện như Handmaid&rsquo;s Tale, House of Cards,&nbsp;<em>Orange is the New Black</em>, Game of Thrones, v&agrave; thậm ch&iacute; cả The Marvelous Mrs. Maisel.</p>\r\n\r\n<p>Theo một nguồn tin b&ecirc;n trong, series truyền h&igrave;nh&nbsp;<em>Vital Signs&nbsp;</em>đ&atilde; bị ch&iacute;nh Tim Cook từ chối v&igrave; n&oacute; qu&aacute; bạo lực v&agrave; kh&ocirc;ng phải thứ m&agrave; Apple c&oacute; thể ph&aacute;t s&oacute;ng.</p>\r\n\r\n<p>Đối với Apple, những nội dung th&ocirc; tục, t&igrave;nh dục hoặc bạo lực đều kh&aacute; kh&oacute; chấp nhận khi c&ocirc;ng ty cố gắng trở th&agrave;nh nh&agrave; sản xuất nội dung chất lượng cao. Đ&acirc;y l&agrave; một việc v&ocirc; h&igrave;nh chung b&oacute;p nghẹt khả năng s&aacute;ng tạo c&aacute;c nội dung m&agrave; Apple c&oacute; thể l&agrave;m ra.</p>\r\n\r\n<p>Mục ti&ecirc;u của Apple l&agrave; biến dịch vụ của h&atilde;ng trở n&ecirc;n th&acirc;n thiện với gia đ&igrave;nh, vốn cũng c&oacute; nguy cơ bị cản trở bởi đối thủ nặng k&iacute; nhất &ndash; Disney.</p>\r\n\r\n<p>Với sự cạnh tranh khốc liệt đến mức gần như kh&ocirc;ng đem lại gi&aacute; trị n&agrave;o r&otilde; rệt cho Apple, liệu quyết định x&acirc;m nhập v&agrave;o thị trường vốn đ&atilde; rất chật n&agrave;y c&oacute; thật sự đ&aacute;ng hay kh&ocirc;ng?</p>\r\n\r\n<p>Tin rằng với tiềm lực l&ecirc;n tới 200 tỷ đ&ocirc; la, Apple chắc chắn vẫn c&ograve;n cơ hội chiến đấu. C&acirc;u hỏi đặt ra l&agrave; liệu kh&aacute;n giả c&oacute; th&egrave;m để &yacute; xem những g&igrave; m&agrave; h&atilde;ng cho rằng l&agrave; ph&ugrave; hợp với c&aacute;c ti&ecirc;u ch&iacute; của họ.</p>\r\n', '2018-10-09 06:03:22', 6, 'shareit-1538036925.png', 11, 1, 1, 0),
(9, '2 nhà sáng lập Instagram bất ngờ đồng loạt nghỉ việc sau lùm xùm “căng thẳng” với Mark Zuckerberg', 'Sáng nay (theo giờ Việt Nam) Kevin Systrom, Giám đốc điều hành của Instagram bất ngờ thông báo', '<p>S&aacute;ng nay (theo giờ Việt Nam) Kevin Systrom, Gi&aacute;m đốc điều h&agrave;nh của Instagram bất ngờ th&ocirc;ng b&aacute;o anh v&agrave; đồng s&aacute;ng lập Mike Krieger đ&atilde; ch&iacute;nh thức rời khỏi Instagram.&nbsp;Tuy&ecirc;n bố tr&ecirc;n được đưa ra sau những nghi vấn về việc gia tăng căng thẳng giữ 2 nh&agrave; s&aacute;ng lập của Instagram với CEO của Facebook &ndash;&nbsp;Mark Zuckerberg về định hướng ph&aacute;t triển sản phẩm.</p>\r\n\r\n<blockquote>\r\n<p>Krieger v&agrave; Systrom c&ugrave;ng nhau th&agrave;nh lập Instagram v&agrave;o năm 2010, v&agrave; n&oacute; đ&atilde; được Facebook mua lại với gi&aacute; 1 tỷ đ&ocirc; la v&agrave;o năm 2012.</p>\r\n</blockquote>\r\n\r\n<p>Instagram l&agrave; một trong số &iacute;t những điểm tựu doanh thu trong hệ sinh th&aacute;i của Facebook sau&nbsp;Scandal&nbsp;Cambridge Analytica. Ch&iacute;nh sự nổi tiếng của Instagram khiến ban quản trị bắt đầu đặt ra c&acirc;u hỏi về tương lai của ứng dụng mạng x&atilde; hội n&agrave;y, những bất đồng, căng thẳng ch&iacute;nh thức nổ ra từ đ&acirc;y.</p>\r\n\r\n<p>Theo đại diện ph&aacute;t ng&ocirc;n của Instagram cho biết: cả 2 nh&agrave; s&aacute;ng lập muốn d&agrave;nh nhiều thời gian hơn việc s&aacute;ng tạo, để tạo ra những sản phẩm tốt hơn. Theo NYT đưa tin,&nbsp;Kevin Systrom v&agrave;&nbsp;Mike Krieger sẽ ho&agrave;n tất việc b&agrave;n giao v&agrave; ch&iacute;nh thức kết th&uacute;c c&ocirc;ng việc tại Instagram v&agrave;o tuần tới.</p>\r\n\r\n<p>Systrom hiện l&agrave; CEO &amp; Krieger l&agrave; CTO của Instagram, hiện tại vẫn chưa c&oacute; th&ocirc;ng tin về việc ai sẽ l&agrave; người thay thế 2 vị tr&iacute; n&agrave;y.</p>\r\n\r\n<p>Trong những th&aacute;ng gần đ&acirc;y, Facebook đ&atilde; bắt đầu can thiệp nhiều hơn v&agrave;o đội ngũ quản l&yacute; của Instagram.&nbsp;V&agrave;o th&aacute;ng 5 năm 2018, Facebook đ&atilde; cải tổ bộ m&aacute;y điều h&agrave;nh, đỉnh điểm l&agrave; việc bổ nhiệm Chris Cox &ndash; nh&acirc;n sự cao cấp ph&aacute;t triển Facebook App trở th&agrave;nh gi&aacute;m đốc ph&aacute;t triển sản phẩm cho Instagram v&agrave; Facebook. Adam Mosseri, Ph&oacute; chủ tịch phụ tr&aacute;ch News Feed của Facebook, được bổ nhiệm tạo ra sản phẩm mới cho Instagram.</p>\r\n\r\n<p>Tờ Wall Street Journal tr&iacute;ch dẫn một nguồn tin mật cho biết đ&atilde; c&oacute; những xung đột, bất đồng giữa&nbsp;Systrom v&agrave; Krieger với đội ngũ điều h&agrave;nh của Facebook xung quanh vấn đề &ldquo;quyền tự chủ của Instagram&rdquo; &ndash; sự ra đi của 2 nh&agrave; s&aacute;ng lập Instagram đ&atilde; nằm trong kế hoạch của Facebook, v&agrave;&nbsp;Adam Mosseri, Ph&oacute; chủ tịch phụ tr&aacute;ch News Feed của Facebook sẽ l&agrave; người được chỉ định thay thế vị tr&iacute; CEO của Instagram.</p>\r\n\r\n<p>V&agrave;o th&aacute;ng 4 năm nay, nh&agrave; đồng s&aacute;ng lập WhatsApp &ndash; Jan Koum, ứng dụng nhắn tin được Facebook mua lại với gi&aacute; 19 tỷ USD, cũng đ&atilde; rời khỏi Facebook .Trong khi đ&oacute;, Brian Acton &ndash; đồng s&aacute;ng lập kh&aacute;c của WhatsApp lại k&ecirc;u gọi cộng đồng &ldquo;x&oacute;a Facebook&rdquo;.</p>\r\n\r\n<blockquote>\r\n<p>Trong một tuy&ecirc;n bố Zuckerberg từng n&oacute;i: &ldquo;Kevin v&agrave; Mike l&agrave; những nh&agrave; s&aacute;ng tạo sản phẩm phi thường v&agrave; Instagram ch&iacute;nh l&agrave; phản &aacute;nh t&agrave;i năng s&aacute;ng tạo của họ. T&ocirc;i đ&atilde; học được rất nhiều qua 6 năm l&agrave;m việc c&ugrave;ng với họ, v&agrave; t&ocirc;i thực sự th&iacute;ch điều đ&oacute;. T&ocirc;i hy vọng sẽ được nh&igrave;n thấy những s&aacute;ng tạo tiếp theo trong thời gian tới&rdquo;</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n', '2018-10-09 06:03:21', 6, 'shareit-1538037158.jpg', 30, 1, 1, 0),
(10, '[Java Day] LineVietnam tổ chức sự kiện cho lập viên Java – Mở đầu chuỗi sự kiện lập trình đáng mong chờ trong năm', 'Không có gì lạ khi Java là một trong những ngôn ngữ lập trình phổ biến nhất hiện nay.', '<p>Kh&ocirc;ng c&oacute; g&igrave; lạ khi Java l&agrave; một trong những ng&ocirc;n ngữ lập tr&igrave;nh phổ biến nhất hiện nay. Java với c&aacute;c ưu điểm đơn giản, c&uacute; ph&aacute;p dễ đọc, lựa chọn tốt để t&igrave;m hiểu về lập tr&igrave;nh hướng đối tượng. Một trong những điểm hấp dẫn của Java l&agrave; API phong ph&uacute; v&agrave; c&oacute; thể l&agrave;m nhiều thứ hơn với Java, bao gồm đồ họa, &acirc;m thanh v&agrave; viết c&aacute;c tr&ograve; chơi nhỏ như Tic Tac Toe, Tetris, v.v. đi c&ugrave;ng với đ&oacute; l&agrave; một cộng đồng năng động v&agrave; đ&ocirc;ng đảo, bất k&igrave; vấn đề g&igrave; th&igrave; việc tra Google, StackOverflow, diễn đ&agrave;n Java trở n&ecirc;n dễ d&agrave;ng hơn.</p>\r\n\r\n<p>Nhằm tạo một s&acirc;n chơi mở trong lĩnh vực c&ocirc;ng nghệ, v&agrave; lập tr&igrave;nh c&ocirc;ng ty LINE Vietnam tổ chức chuỗi sự kiện định kỳ d&agrave;nh ri&ecirc;ng cho c&aacute;c lập tr&igrave;nh vi&ecirc;n bắt đầu từ th&aacute;ng 9 n&agrave;y. Sự kiện mở đầu &ldquo;September rendezvous with LINE Vietnam &ndash; Java the Day&rdquo; đ&atilde; diễn ra tại&nbsp;<strong>to&agrave; nh&agrave; Vietcapital, số 412 đường Nguyễn Thị Minh Khai, Quận 3, TP.HCM.&nbsp;</strong>Sự kiện xoay quanh Java 9, gồm 2 Topic nhỏ:</p>\r\n\r\n<ul>\r\n	<li>Evolving Java and the JVM: Mobile, Micro and Modular &ndash; diễn giả Nguyễn To&agrave;n Tiến (CTO &amp; Co Founder Tungtung.vn)</li>\r\n	<li>Java 9 &ndash; Modularity with Demo &ndash; diễn giả Minh Trần (Senior Developer từ TINYpulse)</li>\r\n</ul>\r\n\r\n<p>Kể từ khi Java 8 được ph&aacute;t h&agrave;nh, m&atilde;i tận 3 năm sau v&agrave;o th&aacute;ng 9 năm 2017 Oracle mới ch&iacute;nh thức ph&aacute;t h&agrave;nh Java 9 với nhiều cải tiến đ&aacute;ng ch&uacute; &yacute;, theo đ&oacute; anh To&agrave;n Tiến c&oacute; 3 thay đổi đ&aacute;ng ghi nhận của Java 9 bao gồm:</p>\r\n\r\n<ul>\r\n	<li>JShell</li>\r\n	<li>Functional Interface</li>\r\n	<li>Jigsaw</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/files/images/line-01.jpg\" style=\"height:506px; width:900px\" /></p>\r\n\r\n<p>Cũng theo anh To&agrave;n Tiến nhận định cải tiến &ldquo;đ&aacute;ng gi&aacute;&rdquo; nhất trong Java 9 phải kể đến l&agrave; Jigsaw &ndash; Java Module System. Đồng quan điểm với diễn giả To&agrave;n Tiến, diễn giả Minh Tran Chia sẽ r&otilde; hơn c&aacute;c ưu điểm Java Module System bao gồm:</p>\r\n\r\n<ul>\r\n	<li>T&iacute;nh đ&oacute;ng g&oacute;i</li>\r\n	<li>Cấu h&igrave;nh ổn định</li>\r\n	<li>Khả năng mở rộng</li>\r\n	<li>Bảo mật</li>\r\n	<li>Khả năng tối ưu h&oacute;a</li>\r\n</ul>\r\n\r\n<p>Suốt 20 năm ph&aacute;t triển vấn đề lớn nhất m&agrave; Java gặp phải l&agrave; runtime library. Dẫn đến t&igrave;nh trạng lộn xộn, classes chồng ch&eacute;o nhau. Với Module System gi&uacute;p giải quyết triệt để c&aacute;c vấn đề đ&oacute;, bản th&acirc;n JDK ch&iacute;nh l&agrave; module c&ugrave;ng với 90 module ri&ecirc;ng biệt kh&aacute;c. Chỉ c&aacute;c package được xuất ra một c&aacute;ch r&otilde; r&agrave;ng từ module mới c&oacute; thể truy cập được tới c&aacute;c module kh&aacute;c. Cuối c&ugrave;ng, c&aacute;c classes thực hiện nội bộ giờ c&oacute; thể&nbsp;đ&oacute;ng g&oacute;i th&ocirc;ng tin của người d&ugrave;ng bằng c&aacute;c trường th&ocirc;ng tin phụ, để thực hiện chức năng truyền tin tr&ecirc;n mạng. Ngo&agrave;i ra, c&aacute;c module c&oacute; thể thể hiện sự phụ thuộc r&otilde; r&agrave;ng v&agrave;o c&aacute;c module kh&aacute;c. Sự phụ thuộc lu&ocirc;n được kiểm tra bởi hệ thống module cả trong qu&aacute; tr&igrave;nh bi&ecirc;n dịch v&agrave; thực hiện. Việc bổ sung c&aacute;c Module cung cấp một đường dẫn đến c&aacute;c ứng dụng c&oacute; cấu tr&uacute;c r&otilde; r&agrave;ng v&agrave; đ&aacute;ng tin cậy hơn.</p>\r\n', '2018-10-09 06:03:21', 6, 'shareit-1538037529.jpg', 12, 1, 4, 0),
(11, 'Sự kiện Asia Blockchain Summit mở ra những cơ hội mới cho thị trường Blockchain châu Á', 'Sáng nay (21/07) Asia Blockchain Hub tại Kualalumpur (Malaysia) sự kiện chính thức ra mắt Asia Blockchain Hub', '<p>S&aacute;ng nay (21/07) Asia Blockchain Hub tại Kualalumpur (Malaysia) sự kiện ch&iacute;nh thức ra mắt Asia Blockchain Hub dưới sự bảo trợ của European Blockchain Hub đ&atilde; diễn ra. Sự kiện nhằm mục ti&ecirc;u khởi động chương tr&igrave;nh ph&aacute;t h&agrave;nh bộ ti&ecirc;u chuẩn blockchain d&agrave;nh khu vực ch&acirc;u &Acirc;u v&agrave; ch&acirc;u &Aacute;.</p>\r\n\r\n<p>European Blockchain Hub được th&agrave;nh lập v&agrave;o ng&agrave;y 9 th&aacute;ng 5 năm 2018 tại Slovenia c&ugrave;ng với tuy&ecirc;n bố hợp t&aacute;c về quan hệ đối t&aacute;c Blockchain được k&yacute; kết bởi 22 quốc gia ch&acirc;u &Acirc;u v&agrave;o ng&agrave;y 10 th&aacute;ng 4 năm 2018.</p>\r\n\r\n<p>Ngay sau đ&oacute;, European Blockchain Hub đ&atilde; chọn Malaysia l&agrave; điểm đến tiếp theo để mở rộng hợp t&aacute;c cho European Blockchain Hub.Giải th&iacute;ch cho việc lựa chọn Malaysia l&agrave; điểm đến đầu ti&ecirc;n tại khu vực ch&acirc;u &Aacute;, đại diện European Blockchain Hub cho biết: họ đ&atilde; nhận thấy tiềm năng to lớn của ng&agrave;nh c&ocirc;ng nghiệp blockchain ở Malaysia vượt xa những quốc gia kh&aacute;c trong khu vực.</p>\r\n\r\n<p>Mặt kh&aacute;c, Malaysia cũng hội &nbsp;tụ đủ yếu tố &ldquo;thi&ecirc;n thời địa lợi nh&acirc;n h&ograve;a &ldquo; &ndash; nơi tập trung nhiều t&agrave;i năng trong ng&agrave;nh c&ocirc;ng nghiệp blockchain, bao gồm: Matthew Tan, Booby Ong &ndash; co-founder Coingecko.</p>\r\n\r\n<p>C&oacute; thể n&oacute;i rằng ng&agrave;nh c&ocirc;ng nghiệp blockchain ở Malaysia đang đ&oacute;ng vai tr&ograve; then chốt trong việc th&uacute;c đẩy ng&agrave;nh c&ocirc;ng nghiệp Blockchain ch&acirc;u &Aacute; n&oacute;i ri&ecirc;ng v&agrave; rộng hơn l&agrave; nền c&ocirc;ng nghiệp Blockchain to&agrave;n cầu. &nbsp;</p>\r\n\r\n<p>Founder của Asia Blockchain Hub, Rex Yeap n&oacute;i: &ldquo;Ch&uacute;ng t&ocirc;i tin rằng đối với bất kỳ ng&agrave;nh c&ocirc;ng nghiệp n&agrave;o muốn c&oacute; tương lai l&acirc;u d&agrave;i th&igrave; sự hỗ trợ của ch&iacute;nh phủ l&agrave; rất quan trọng. Ng&acirc;n h&agrave;ng Negara đ&atilde; thể hiện sự cởi mở v&agrave; ủng hộ của m&igrave;nh khi l&agrave; một trong những người ti&ecirc;n phong trong &aacute;p dụng v&agrave; th&uacute;c đẩy luật d&agrave;nh cho c&ocirc;ng nghệ tiền ảo v&agrave; điều n&agrave;y đ&atilde; cho ch&uacute;ng ta niềm tin to lớn rằng ng&agrave;nh c&ocirc;ng nghiệp n&agrave;y sẽ c&oacute; thể đi xa hơn nữa tại Malaysia&rdquo;</p>\r\n\r\n<p>C&ugrave;ng với sự ra mắt của Asia Blockchain Hub, sự kiện c&ograve;n l&agrave; buổi gặp mặt những nh&acirc;n vật nổi tiếng trong l&agrave;ng c&ocirc;ng nghệ, vốn lu&ocirc;n ủng hộ việc hỗ trợ blockchain, bao gồm:</p>\r\n\r\n<ul>\r\n	<li>Dato&rsquo; Haji Marzuki Yahya &ndash;&nbsp;Thứ trưởng Bộ Ngoại giao Malaysia</li>\r\n	<li>Blaž Golob &ndash;&nbsp;President của European Blockchain Hub v&agrave; Co-founder &amp; Director của GoForeSight (GFS) Institute</li>\r\n</ul>\r\n\r\n<p>Hội nghị họp b&aacute;o lễ k&yacute; kết hợp t&aacute;c giữa Asia Blockchain Hub v&agrave; European Blockchain Hub, đồng thời ra mắt trung t&acirc;m Blockchain ch&acirc;u &Aacute; &ndash; Asia Blockchain Hub l&agrave; một trong số &iacute;t những sự kiện blockchain mang tầm quốc tế.</p>\r\n', '2018-10-09 06:03:20', 6, 'shareit-1538037662.jpg', 18, 1, 4, 0),
(12, 'Tổng hợp công cụ hữu ích cho Frontend dev và Designer', 'Dưới đây mình tổng hợp một số công cụ hữu ích cho một Frontend developer/Designer được chọn lọc qua nhiều nguồn khác nhau', '<p>Dưới đ&acirc;y m&igrave;nh tổng hợp một số&nbsp;<strong>c&ocirc;ng cụ hữu &iacute;ch</strong>&nbsp;cho một Frontend developer/Designer được chọn lọc qua nhiều nguồn kh&aacute;c nhau. Hy vọng những sites n&agrave;y c&oacute; thể hỗ trợ phần n&agrave;o cho c&ocirc;ng việc l&ecirc;n &yacute; tưởng, ho&agrave;n thiện thiết kế UI v&agrave; ph&aacute;t triển phần code Frontend cho c&aacute;c dự &aacute;n của c&aacute;c bạn</p>\r\n\r\n<h2>1. Fontisto</h2>\r\n\r\n<p><a href=\"https://www.fontisto.com/\" rel=\"noopener nofollow\" target=\"_blank\"><strong>Fontisto</strong></a>&nbsp;l&agrave; kho SVG icon đ&aacute;ng được nhắc đến đầu ti&ecirc;n bởi thiết kế trang web&nbsp;<strong>super cool</strong>&nbsp;c&ugrave;ng giao diện docs, getting started th&ocirc;ng minh dễ tiếp cận. C&aacute;c icon SVG c&oacute; nhiều options khi sử dụng với đa dạng c&aacute;c loại icon. Điểm cộng lớn l&agrave; trang web n&agrave;y&nbsp;<em>ho&agrave;n to&agrave;n miễn ph&iacute; cho commercial use</em>.</p>\r\n\r\n<h2>2. Storyboarder</h2>\r\n\r\n<p><a href=\"https://wonderunit.com/storyboarder/\" rel=\"noopener nofollow\" target=\"_blank\"><strong>Storyboarder</strong></a>&nbsp;l&agrave; một c&ocirc;ng cụ tạo storyboard hết sức kinh ngạc v&agrave;&hellip;<strong>free</strong>.</p>\r\n\r\n<ul>\r\n	<li>Bạn c&oacute; thể tạo ra c&aacute;c frame với đầy đủ cụ vẽ, timing, dialog, action&hellip; gọn g&agrave;ng v&agrave; được thiết kế tinh gọn tối đa.</li>\r\n	<li><strong>Storyboarder</strong>&nbsp;c&ograve;n hỗ trợ Adobe Photoshop để tiện cho việc đi s&acirc;u v&agrave;o những chi tiết phức tạp, live edit tr&ecirc;n từng frame.</li>\r\n	<li>Thậm ch&iacute; với những sketch/blueprint&nbsp;<strong>Storyboarder</strong>&nbsp;cho ph&eacute;p bạn import ch&uacute;ng v&agrave; ngược lại, export để c&oacute; thể chỉnh sửa với b&uacute;t ch&igrave; v&agrave; giấy.</li>\r\n	<li>Hỗ trợ key commands v&agrave; auto generator!</li>\r\n	<li>Ch&iacute;nh s&aacute;ch free của&nbsp;<strong>Wonder Unit studio</strong>&nbsp;cũng hết sức r&otilde; r&agrave;ng, một dự &aacute;n open source t&acirc;m huyết!</li>\r\n</ul>\r\n\r\n<p><em>Miễn l&agrave; bạn c&oacute; &yacute; tưởng</em>, mọi thứ ở đ&acirc;y dường như ho&agrave;n hảo từ sản phẩm đến hỗ trợ người d&ugrave;ng&hellip; H&atilde;y gh&eacute; thăm v&agrave; thử sức s&aacute;ng tạo của bạn, biết đ&acirc;u đ&acirc;y sẽ l&agrave; software kh&ocirc;ng thể thiếu trong c&ocirc;ng việc hằng ng&agrave;y của bạn.</p>\r\n\r\n<h2>3. Font Playground</h2>\r\n\r\n<p><a href=\"https://play.typedetail.com/\" rel=\"noopener nofollow\" target=\"_blank\"><strong>Font Playground</strong></a>&nbsp;l&agrave; một site để người d&ugrave;ng c&oacute; thể &lsquo;play&rsquo; với những định dạng của font, đưa ra c&aacute;i nh&igrave;n so s&aacute;nh v&agrave; đầy đủ, cũng như export Frontend code.</p>\r\n\r\n<p>C&aacute;c variable options của Font Playground được tr&igrave;nh b&agrave;y đa đạng v&agrave; đầy đủ. H&atilde;y gh&eacute; thăm v&agrave; tạo playground cho m&igrave;nh ngay nh&eacute;.</p>\r\n\r\n<h2>4. CoolHue</h2>\r\n\r\n<p><a href=\"https://github.com/webkul/coolhue/\" rel=\"noopener nofollow\" target=\"_blank\"><strong>CoolHue</strong></a>&nbsp;gi&uacute;p bạn tạo ra những gradient pallete m&agrave;u từ những file JSON c&oacute; sẵn, tool đ&atilde; cung cấp sẵn 60 options si&ecirc;u đẹp. Bạn ho&agrave;n to&agrave;n c&oacute; thể th&ecirc;m những gradient rực rỡ trong dự &aacute;n, xuất Photoshop hoặc Sketch.</p>\r\n\r\n<h2>5. ShrinkMe</h2>\r\n\r\n<p><a href=\"https://shrinkme.app/?s=e\" rel=\"noopener nofollow\" target=\"_blank\"><strong>ShrinkMe</strong></a>&nbsp;sẽ gi&uacute;p ch&uacute;ng ta compress những bức ảnh cho web cực k&igrave; nhanh ch&oacute;ng v&agrave; hiệu quả. Chỉ với v&agrave;i thao t&aacute;c k&eacute;o thả v&agrave; get link download ch&uacute;ng ta đ&atilde; c&oacute; những bức ảnh giảm dung lượng đ&aacute;ng kể(từ 40 &ndash; 75%) m&agrave; kh&ocirc;ng l&agrave;m giảm chất lượng ảnh.</p>\r\n\r\n<p>C&ocirc;ng cụ n&agrave;y kh&ocirc;ng những vậy c&ograve;n l&agrave;m việc offline v&agrave; hỗ trợ nhiều file shrink c&ugrave;ng l&uacute;c!</p>\r\n', '2018-10-10 06:38:48', 6, 'shareit-1538045691.jpg', 78, 1, 3, 0);
INSERT INTO `news` (`id`, `name`, `preview`, `detail`, `date_create`, `created_by`, `picture`, `view`, `active`, `cat_id`, `is_slide`) VALUES
(13, 'Một số thủ thuật giúp tăng hiệu suất website của bạn', 'Là một Developer, không ai trong chúng ta được bỏ qua việc tăng performance cho ứng dụng, website,… mà mình tạo ra.', '<h2>I, Lời mở đầu</h2>\r\n\r\n<p>L&agrave; một Developer, kh&ocirc;ng ai trong ch&uacute;ng ta được bỏ qua việc tăng performance cho ứng dụng, website,&hellip; m&agrave; m&igrave;nh tạo ra. Tuy nhi&ecirc;n, khi mới đi l&agrave;m, hay c&ograve;n gọi l&agrave; những junior developer, ch&uacute;ng ta thường chỉ cần&nbsp;<strong>&ldquo;chạy được l&agrave; được&rdquo;</strong>. Điều n&agrave;y tạo n&ecirc;n những app, website c&oacute; hiệu năng cực kỳ tệ, m&agrave; phần lớn do developer thiếu kinh nghiệm. Dưới đ&acirc;y, m&igrave;nh muốn giới thiệu một số thủ thuật tuy kh&aacute; nhỏ, dễ thực hiện nhưng lại cải thiện đ&aacute;ng kể hiệu suất cho website của bạn.</p>\r\n\r\n<p><img alt=\"\" src=\"https://images.viblo.asia/7358aba3-c4d6-4bad-9715-f994c0017d50.png\" />(H&igrave;nh: một website si&ecirc;u đơn giản nhưng c&oacute; tốc độ load như r&ugrave;a b&ograve;)</p>\r\n\r\n<h2>II, Một số thủ thuật</h2>\r\n\r\n<h3>1, Lu&ocirc;n lu&ocirc;n minimize c&aacute;c file js, css khi đưa l&ecirc;n production</h3>\r\n\r\n<p>C&aacute;c file js, css nếu minimize ở m&ocirc;i trường develop th&igrave; sẽ chẳng c&oacute; &yacute; nghĩa g&igrave;, cũng như biến n&oacute; th&agrave;nh những file kh&ocirc;ng-thể-đọc. Tuy nhi&ecirc;n đối với m&ocirc;i trường production th&igrave; lại kh&aacute;c !</p>\r\n\r\n<p>Ở m&ocirc;i trường production, yếu tố tốc độ lu&ocirc;n được ưu ti&ecirc;n, vậy n&ecirc;n k&iacute;ch thước của c&aacute;c file m&agrave; client sẽ tải về cũng cần c&agrave;ng nhỏ c&agrave;ng tốt. Vậy n&ecirc;n đối với c&aacute;c file js, css, việc bỏ c&aacute;c dấu space, xuống d&ograve;ng nhằm giảm k&iacute;ch thước của file l&agrave; điều lu&ocirc;n phải l&agrave;m khi đưa ch&uacute;ng l&ecirc;n production. Bởi v&igrave; khi ở production, sẽ chẳng c&oacute; ai cần đọc những file n&agrave;y ngo&agrave;i m&aacute;y t&iacute;nh, m&agrave; m&aacute;y t&iacute;nh th&igrave; chẳng quan t&acirc;m đến t&iacute;nh dễ đọc của code. Vậy n&ecirc;n bạn c&oacute; bỏ to&agrave;n bộ c&aacute;c space cũng như xuống d&ograve;ng th&igrave; c&aacute;c c&acirc;u lệnh cũng được thực hiện y như vậy (đối với js v&agrave; css th&ocirc;i nh&eacute;).</p>\r\n\r\n<p>Với c&acirc;u hỏi l&agrave;m thế n&agrave;o để minimize c&aacute;c file js v&agrave; css, th&igrave; bạn c&oacute; thể google, trong v&ograve;ng 1 t&iacute;ch tắc n&oacute; c&oacute; thể đưa ta đến một v&agrave;i địa chỉ sau đ&acirc;y:</p>\r\n\r\n<p><a href=\"https://javascript-minifier.com/\" rel=\"noopener nofollow\" target=\"_blank\">https://javascript-minifier.com/</a></p>\r\n\r\n<p><a href=\"https://www.minifier.org/\" rel=\"noopener nofollow\" target=\"_blank\">https://www.minifier.org/</a></p>\r\n\r\n<p><a href=\"https://cssminifier.com/\" rel=\"noopener nofollow\" target=\"_blank\">https://cssminifier.com/</a></p>\r\n\r\n<p>Đ&acirc;y đều l&agrave; c&aacute;c trang minimize js, css rất tốt, bạn chỉ cần copy nội dung code của m&igrave;nh v&agrave; d&aacute;n l&ecirc;n đ&acirc;y, việc c&ograve;n lại những trang web kia sẽ xử l&yacute; cho bạn, rất tiện lợi !</p>\r\n\r\n<h3>2, Giảm k&iacute;ch thước ảnh</h3>\r\n\r\n<p>Những bức ảnh c&oacute; thể l&agrave;m website của bạn trở n&ecirc;n cực kỳ nặng nề, đặc biệt nếu như website của bạn l&agrave;m về thương mại điện tử, mạng x&atilde; hội,&hellip; với lượng data về ảnh cực kỳ lớn. Nếu kh&ocirc;ng xử l&yacute; ảnh trước khi upload l&ecirc;n, n&oacute; sẽ khiến bạn cực kỳ đau đầu.</p>\r\n\r\n<ol>\r\n	<li>H&atilde;y sử dụng&nbsp;<a href=\"http://jpeg-optimizer.com/\" rel=\"noopener nofollow\" target=\"_blank\">jpeg-optimizer</a>&nbsp;v&agrave;&nbsp;<a href=\"https://tinypng.com/\" rel=\"noopener nofollow\" target=\"_blank\">tiny-png</a>&nbsp;để n&eacute;n ảnh của bạn trước khi upload m&agrave; kh&ocirc;ng l&agrave;m ảnh hưởng đến chất lượng h&igrave;nh ảnh</li>\r\n	<li>H&atilde;y x&oacute;a bỏ metadata của bức ảnh m&agrave; bạn upload l&ecirc;n website. Tin t&ocirc;i đi, ngo&agrave;i vấn đề performance ra, th&igrave; bạn cũng kh&ocirc;ng muốn upload metadata của một bức ảnh l&ecirc;n internet đ&acirc;u ! Trong mỗi bức ảnh, kể cả jpg hay png,&hellip; cũng đều c&oacute; một lượng th&ocirc;ng tin nhỏ đi k&egrave;m, n&oacute; lưu những th&ocirc;ng tin như: ng&agrave;y chụp, loại m&aacute;y chụp, thậm ch&iacute; l&agrave; địa điểm chụp,&hellip; những th&ocirc;ng tin n&agrave;y được gọi l&agrave; metadata của bức ảnh. Loại bỏ lượng th&ocirc;ng tin n&agrave;y đi sẽ giảm được một lượng kha kh&aacute; data m&agrave; client phải tải về đối với những website chứa nhiều ảnh. Ngo&agrave;i ra, n&oacute; c&ograve;n bảo mật th&ocirc;ng tin của người chụp bức ảnh. Để x&oacute;a metadata của ảnh, bạn c&oacute; thể d&ugrave;ng tool&nbsp;<a href=\"http://www.verexif.com/\" rel=\"noopener nofollow\" target=\"_blank\">verexif</a></li>\r\n	<li>Hiển thị size kh&aacute;c nhau đối với c&aacute;c k&iacute;ch cỡ m&agrave;n h&igrave;nh kh&aacute;c nhau:\r\n	<p>Ng&agrave;y nay, với sự ph&aacute;t triển của smartphone, th&igrave; việc phải hiển thị trang web tr&ecirc;n c&aacute;c m&agrave;n h&igrave;nh với k&iacute;ch cỡ kh&aacute;c nhau l&agrave; chuyện thường ng&agrave;y. Vậy bạn h&atilde;y thử nhớ lại, xem đ&atilde; bao giờ m&igrave;nh render một bức ảnh với k&iacute;ch cỡ lớn tr&ecirc;n c&aacute;c smartphone chưa ? V&agrave; rằng với một m&agrave;n h&igrave;nh smartphone b&eacute; như vậy, việc hiển thị một bức ảnh lớn, nặng liệu c&oacute; hợp l&yacute; ? Vậy n&ecirc;n h&atilde;y nhớ, lu&ocirc;n hiển thị k&iacute;ch cỡ ảnh ph&ugrave; hợp với k&iacute;ch thước m&agrave;n h&igrave;nh.</p>\r\n\r\n	<p>Vậy l&agrave;m thế n&agrave;o để hiển thị k&iacute;ch cỡ ảnh ph&ugrave; hợp với k&iacute;ch thước m&agrave;n h&igrave;nh ? Trong CSS3, với sự xuất hiện của Media Queries, mọi việc trở n&ecirc;n thật đơn giản.</p>\r\n\r\n	<p>Bạn c&oacute; thể t&ugrave;y chỉnh k&iacute;ch cỡ, hoặc thậm tr&iacute; l&agrave; đổi ảnh kh&aacute;c đối với từng loại m&agrave;n h&igrave;nh sao cho ph&ugrave; hợp với y&ecirc;u cầu đặt ra.</p>\r\n	</li>\r\n	<li>H&atilde;y sử dụng c&aacute;c CDN để chứa c&aacute;c file css, js, ảnh của bạn. Bạn đ&acirc;u thể biết rằng user của m&igrave;nh sẽ truy cập website từ đ&acirc;u, liệu rằng server bạn đặt ở Việt Nam, khi kh&aacute;ch h&agrave;ng truy cập website của bạn từ Nam Phi, website sẽ đạt được tốc độ bạn mong muốn ? Vậy n&ecirc;n, h&atilde;y lu&ocirc;n lu&ocirc;n sử dụng c&aacute;c CDN, họ sẽ lo mọi thứ cho bạn, kh&ocirc;ng chỉ về khoảng c&aacute;ch địa l&yacute;, một số dịch vụ c&ograve;n minimize file gi&uacute;p bạn.</li>\r\n</ol>\r\n', '2018-10-10 11:55:23', 6, 'shareit-1538045818.jpg', 47, 1, 3, 0),
(14, 'Một số điều bạn nên biết khi sử dụng và thiết kế DataBase', 'Làm nghề lập trình chắc chắn ai cũng từng làm việc với Database. Đặc biệt là Back-end những người làm việc và tương tác trực tiếp với Database.', '<p>L&agrave;m nghề lập tr&igrave;nh chắc chắn ai cũng từng l&agrave;m việc với&nbsp;<strong>Database</strong>. Đặc biệt l&agrave;&nbsp;<strong>Back-end</strong>&nbsp;những người l&agrave;m việc v&agrave; tương t&aacute;c trực tiếp với&nbsp;<strong>Database</strong>.</p>\r\n\r\n<p>Nhưng vẫn c&oacute; những điều về Database ta kh&ocirc;ng biết đến hoặc c&oacute; những điều ta đang d&ugrave;ng nhưng kh&ocirc;ng biết tại sao ta lại d&ugrave;ng như vậy.</p>\r\n\r\n<p>B&agrave;i viết n&agrave;y sẽ gi&uacute;p bạn sử dụng&nbsp;<strong>Database</strong>&nbsp;một c&aacute;ch tốt hơn đặc biệt l&agrave; MySQL</p>\r\n\r\n<h3><strong>Database l&agrave; g&igrave;</strong></h3>\r\n\r\n<p>Database hay c&ograve;n gọi l&agrave; hệ thống cơ sở dữ liệu c&oacute; cấu tr&uacute;c, được lưu trữ tr&ecirc;n một thiết bị như băng, đĩa, usb, ổ cứng,&hellip; được duy tr&igrave; dưới dạng tệp tin trong hệ điều h&agrave;nh m&aacute;y t&iacute;nh hay trong hệ quản trị cơ sở dữ liệu. Ch&uacute;ng ta thường bắt gặp thuật ngữ n&agrave;y khi l&agrave;m việc với m&aacute;y t&iacute;nh v&agrave; phần mềm, dữ liệu với nhiều ưu điểm v&agrave; nhược điểm kh&aacute;c nhau. Hệ thống Database rất quan trọng trong c&ocirc;ng t&aacute;c l&agrave;m việc với dữ liệu, nếu kh&ocirc;ng c&oacute; Database lưu trữ th&igrave; c&aacute;c thao t&aacute;c với dữ liệu cũng kh&ocirc;ng thể thực hiện được.</p>\r\n\r\n<h3><strong>Một số điều n&ecirc;n biết khi sử dụng Database (DB)</strong></h3>\r\n\r\n<h3>1) Chỉ được sử dụng chữ thường, số, gạch ch&acirc;n</h3>\r\n\r\n<p>Đ&acirc;y l&agrave; điều đơn giản nhất khi sử dụng v&agrave; thiết kế DB m&agrave; ch&uacute;ng ta vẫn đang thực hiện.</p>\r\n\r\n<p>Đ&oacute; l&agrave; kh&ocirc;ng được sử dụng dấu chấm &ldquo;.&rdquo;, dấu c&aacute;ch &rdquo; &ldquo;, &ldquo;dấu gạch ngang &ldquo;-&rdquo; khi đặt t&ecirc;n DB, t&ecirc;n bảng, t&ecirc;n cột nhưng c&oacute; bao giờ bạn hỏi tại sao lại như vậy. Đ&acirc;y l&agrave; l&yacute; do:</p>\r\n\r\n<ul>\r\n	<li>Dấu chấm &ldquo;.&rdquo; d&ugrave;ng cho c&aacute;c object đ&atilde; được x&aacute;c định như&nbsp;<code>database.schema.table.column</code>n&ecirc;n khi d&ugrave;ng &ldquo;.&rdquo; để đặt t&ecirc;n rất dễ khiến nhầm lẫn khi query DB.</li>\r\n	<li>Dấu c&aacute;ch &rdquo; &rdquo; th&igrave; sẽ khiến khi query ta thừa th&ecirc;m dấu ngoặc k&eacute;p khi query select column như n&agrave;y&nbsp;<code>select &quot;user name&quot; from events</code>. Đặc biệt trong hiện nay c&oacute; rất nhiều framework ra đời gi&uacute;p ta query cũng dễ d&agrave;ng hơn nhưng bạn c&oacute; để &yacute; nếu ta đặt t&ecirc;n column c&oacute; dấu c&aacute;ch v&agrave; d&ugrave;ng framework để query th&igrave; sẽ c&oacute; lỗi, VD với Rails:</li>\r\n</ul>\r\n\r\n<p>Vậy l&agrave; ta kh&ocirc;ng thể d&ugrave;ng được c&aacute;ch viết query gọn của rails m&agrave; m&igrave;nh sẽ vẫn phải viết hẳn cấu query như trong MySQL n&ecirc;n ta thường d&ugrave;ng dấu &ldquo;_&rdquo; để thay thế dấu c&aacute;ch</p>\r\n\r\n<ul>\r\n	<li>C&ograve;n việc kh&ocirc;ng d&ugrave;ng chữ in hoa để tr&aacute;nh phải ghi nhớ k&yacute; tự hoa v&agrave; k&yacute; tự thường của t&ecirc;n db, t&ecirc;n bang, t&ecirc;n cột khi query</li>\r\n</ul>\r\n\r\n<h3>2) Ch&uacute;ng ta n&ecirc;n c&oacute; một cột Primary Key l&agrave; Integer</h3>\r\n\r\n<p>Đ&acirc;y ch&iacute;nh l&agrave; n&oacute;i về việc sử dụng chức năng&nbsp;<code>đ&aacute;nh số nguy&ecirc;n tăng dần tự động</code>&nbsp;của MySQL cho cột&nbsp;<strong>id</strong>. Việc n&agrave;y sẽ gi&uacute;p cho những dữ liệu trong bảng sẽ kh&ocirc;ng bị tr&ugrave;ng lặp v&agrave; l&agrave; duy nhất một c&aacute;ch dễ d&agrave;ng hơn (UUID).</p>\r\n\r\n<p>D&ugrave; cho ta c&oacute; thể d&ugrave;ng UUID với nhiều c&aacute;ch kh&aacute;c nữa nhưng việc để cột&nbsp;<strong>id</strong>&nbsp;l&agrave; integer gi&uacute;p query dễ d&agrave;ng hơn rất nhiều.</p>\r\n\r\n<p>Đặc biệt khi c&oacute; những dữ liệu tr&ugrave;ng lặp khi import dữ liệu cũng c&oacute; thể gi&uacute;p ta dễ d&agrave;ng x&oacute;a đi dữ liệu thừa đ&oacute; v&igrave; c&oacute;&nbsp;<strong>id</strong>&nbsp;duy nhất</p>\r\n\r\n<h3>3) Lu&ocirc;n sử dụng UTC l&agrave;m timezone</h3>\r\n\r\n<p>Việc sử dụng UTC timezone gi&uacute;p ta tr&aacute;nh được rất nhiều lỗi khi sử dụng.</p>\r\n\r\n<p>Ta c&oacute; thể dễ d&agrave;ng chuyển đổi dữ liệu UTC sang timezone hiện tại tr&ecirc;n server dễ d&agrave;ng</p>\r\n\r\n<h3>4) Tr&aacute;nh sử dụng DISTINCT</h3>\r\n\r\n<p>DISTINCT gi&uacute;p ch&uacute;ng ta lấy dữ liệu kh&ocirc;ng tr&ugrave;ng lặp khi query nhưng đồng thời n&oacute; cũng khiến cho tất cả c&acirc;u query của bạn chậm đi.</p>\r\n\r\n<p>Việc nhận kết quả tr&ugrave;ng lặp rất dễ xảy ra đặc biệt khi bạn query join giữa c&aacute;c bảng với nhau hoặc trong DB c&oacute; những dữ liệu giống nhau.</p>\r\n\r\n<p>Bạn c&oacute; thể d&ugrave;ng rất nhiều c&aacute;ch để c&oacute; thể lấy được c&aacute;c dữ liệu m&agrave; kh&ocirc;ng tr&ugrave;ng lặp như sử dụng c&aacute;c h&agrave;m c&oacute; sẵn của framework để xử l&yacute; kết quả của c&acirc;u query m&igrave;nh nhận được.</p>\r\n\r\n<p>Ta n&ecirc;n tr&aacute;nh sử dụng DISTINST nhiều nhất c&oacute; thể</p>\r\n', '2018-10-09 13:58:33', 6, 'shareit-1538045883.jpg', 63, 0, 3, 0),
(15, 'Làm thế nào để cải thiện chất lượng code?', 'Code chất lượng là điều mà ai cũng nhắc đến, nhưng chưa chắc đã thực hiện.', '<p>Code chất lượng l&agrave; điều m&agrave; ai cũng nhắc đến, nhưng chưa chắc đ&atilde; thực hiện.</p>\r\n\r\n<p>Hầu hết mọi người đều biết thế n&agrave;o l&agrave; tốt, như dễ đọc dễ hiểu, kh&ocirc;ng tồn tại lỗi nghi&ecirc;m trọng, cover đầy đủ c&aacute;c trường hợp, self-documenting code v.vv.. thế nhưng việc viết được lại kh&oacute; hơn nhiều. Liệu người kh&aacute;c sẽ nghĩ sao về những d&ograve;ng code của m&igrave;nh, sẽ nắm bắt 1 c&aacute;ch đơn giản hay coi n&oacute; như &aacute;c mộng, thực sự l&agrave; thử th&aacute;ch đối với mỗi lập tr&igrave;nh vi&ecirc;n. Kh&ocirc;ng chỉ thế, khi dự &aacute;n cứ to dần l&ecirc;n, sẽ c&oacute; ng&agrave;y ch&iacute;nh bạn kh&ocirc;ng đọc nổi những g&igrave; bản th&acirc;n đ&atilde; viết.</p>\r\n\r\n<p>Để kh&ocirc;ng bao giờ bỏ qua chất lượng code, cần phải tạo ra những quy tắc để bạn c&oacute; thể dựa v&agrave;o, để lu&ocirc;n tham chiếu đến trong khi l&agrave;m việc.</p>\r\n\r\n<p>Dưới đ&acirc;y l&agrave; 5 quy tắc m&agrave; t&ocirc;i vẫn thực hiện mỗi khi code. Ch&uacute;ng gi&uacute;p t&ocirc;i đạt năng suất cao trong c&ocirc;ng việc, gi&uacute;p đồng nghiệp của t&ocirc;i c&oacute; thể dễ d&agrave;ng tiếp cận v&agrave; triển khai c&aacute;c đoạn code của t&ocirc;i. T&ocirc;i mong rằng ch&uacute;ng cũng c&oacute; thể gi&uacute;p bạn code tốt hơn!</p>\r\n\r\n<p><img alt=\"Review_Code\" src=\"https://images.viblo.asia/271c8c17-edc2-450f-a24f-5f1057dc0f17.png\" /></p>\r\n\r\n<h2>Test</h2>\r\n\r\n<p>Test l&agrave; việc m&agrave; ai cũng biết l&agrave; n&ecirc;n l&agrave;m, nhưng đ&ocirc;i khi đứng trước &aacute;p lực thời gian, ch&uacute;ng ta hay lựa chọn việc đi tắt. Thế nhưng, d&ugrave; chỉ l&agrave; v&agrave;i d&ograve;ng code đơn giản cũng c&oacute; thể để lại hậu quả nghi&ecirc;m trọng nếu ch&uacute;ng ta nghĩ chả việc g&igrave; phải test.</p>\r\n\r\n<p>Để 100% đảm bảo code chạy tốt, kh&ocirc;ng c&oacute; c&aacute;ch n&agrave;o kh&aacute;c ngo&agrave;i test.</p>\r\n\r\n<p>H&atilde;y bắt đầu với unit test để kiểm tra xem từng phần nhỏ c&oacute; hoạt động đ&uacute;ng mong muốn hay chưa. Sau đ&oacute;, dần dần test với từng subsystems, v&agrave; cuối c&ugrave;ng l&agrave; test tr&ecirc;n to&agrave;n bộ hệ thống. Thực hiện ho&agrave;n chỉnh theo tr&igrave;nh tự đ&oacute; sẽ gi&uacute;p bạn dễ d&agrave;ng biết đc nơi vấn đề c&oacute; thể ph&aacute;t sinh, xuất ph&aacute;t từ component đơn lẻ hay subsystem nhỏ n&agrave;o.</p>\r\n\r\n<h2>Đặt t&ecirc;n c&oacute; &yacute; nghĩa</h2>\r\n\r\n<p>Đ&acirc;y ch&iacute;nh l&agrave; self-documenting code. Khi bạn đọc lại c&aacute;c đoạn code cũ, bạn kh&ocirc;ng cần phải xem kỹ từng comment hay phải chạy thử để biết &yacute; nghĩa của đoạn code đ&oacute; l&agrave; g&igrave;.</p>\r\n\r\n<p>H&atilde;y để code c&oacute; thể đọc được như 1 đoạn văn tiếng Anh đơn thuần. Điều n&agrave;y &aacute;p dụng cho cả t&ecirc;n biến, class hay function. Ch&uacute;ng cần được đặt t&ecirc;n sao cho kh&ocirc;ng cần giải th&iacute;ch vẫn hiểu được. Thay v&igrave; lười biếng để l&agrave; &ldquo;x&rdquo;, &ldquo;y&rdquo;, &ldquo;z&rdquo;, h&atilde;y lựa chọn &ldquo;width&rdquo; hay &ldquo;distance&rdquo; &ndash; những từ ngữ đại diện cho thế giới thực.</p>\r\n\r\n<h2>Class v&agrave; function n&ecirc;n chia nhỏ v&agrave; tu&acirc;n theo SRP (Single Responsibility Principle)</h2>\r\n\r\n<p>C&aacute;c class v&agrave; function nhỏ thực sự c&oacute; &iacute;ch lợi. Trước hết, ch&uacute;ng cho ph&eacute;p việc unit test được diễn ra độc lập. Nếu đoạn code bạn đang phải test nhỏ, việc t&igrave;m nguồn v&agrave; sửa lỗi bất cứ vấn đề n&agrave;o xuất hiện trong khi test hoặc khi triển khai trở n&ecirc;n dễ d&agrave;ng hơn.</p>\r\n\r\n<p>C&aacute;c class v&agrave; function nhỏ cũng gi&uacute;p cho việc đọc trở n&ecirc;n dễ d&agrave;ng hơn. Thay v&igrave; c&oacute; một khối code khổng lồ với nhiều v&ograve;ng lặp v&agrave; v&ocirc; số c&aacute;c biến, bạn c&oacute; thể giảm khối code đ&oacute; th&agrave;nh một function c&oacute; thể chạy nhiều function kh&aacute;c nhỏ hơn. Sau đ&oacute; bạn c&oacute; thể đặt t&ecirc;n cho c&aacute;c function dựa tr&ecirc;n chức năng của ch&uacute;ng v&agrave; đ&oacute;, bạn đ&atilde; c&oacute; một đoạn code m&agrave; con người c&oacute; thể đọc hiểu được !</p>\r\n\r\n<p>SRP mang lại cho bạn những lợi &iacute;ch tương tự. Tr&aacute;ch nhiệm đơn c&oacute; nghĩa l&agrave; bạn chỉ cần test một số &iacute;t c&aacute;c edge case v&agrave; c&aacute;c trường hợp đ&oacute; tương đối dễ d&agrave;ng để debug. Th&ecirc;m v&agrave;o đ&oacute;, việc đặt t&ecirc;n cho c&aacute;c function sao cho s&aacute;t với thực tế cũng trở n&ecirc;n tương đối dễ d&agrave;ng. Do mỗi function chỉ c&oacute; một mục đ&iacute;ch sử dụng duy nhất n&ecirc;n c&aacute;c function n&agrave;y được đặt t&ecirc;n tương ứng với mục đ&iacute;ch của n&oacute;, tr&aacute;nh được việc phải đặt t&ecirc;n cho một function m&agrave; cần giải quyết rất nhiều vấn đề kh&aacute;c nhau.</p>\r\n\r\n<h2>Bắt v&agrave; xử l&yacute; c&aacute;c exceptions, ngay cả khi bạn nghĩ bạn kh&ocirc;ng cần phải l&agrave;m điều đ&oacute;</h2>\r\n\r\n<p>C&aacute;c exceptions trong code thường l&agrave; c&aacute;c edge cases hoặc c&aacute;c errors m&agrave; ch&uacute;ng ta mong muốn được giải quyết bằng c&aacute;ch thức ri&ecirc;ng của m&igrave;nh. V&iacute; dụ, th&ocirc;ng thường khi một lỗi xuất hiện th&igrave; chương tr&igrave;nh sẽ ngưng chạy, điều n&agrave;y chắc chắn ch&uacute;ng ta kh&ocirc;ng muốn xảy ra tr&ecirc;n production &ndash; nơi c&aacute;c end-users đang sử dụng. Ch&uacute;ng ta cần xem x&eacute;t lỗi đ&oacute; ri&ecirc;ng biệt, c&oacute; khi chỉ thử xem liệu n&oacute; c&oacute; thực sự quan trọng kh&ocirc;ng, hay c&oacute; thể bỏ qua n&oacute;.</p>\r\n\r\n<p>Bạn n&ecirc;n thường xuy&ecirc;n bắt v&agrave; xử l&yacute; c&aacute;c exceptions một c&aacute;ch cụ thể ngay cả khi bạn nghĩ rằng m&igrave;nh kh&ocirc;ng cần phải l&agrave;m thế. Ph&ograve;ng c&ograve;n hơn chữa. Việc giải quyết c&aacute;c exceptions gi&uacute;p cho bạn nắm bắt được c&aacute;c thứ tự v&agrave; kiểm so&aacute;t đoạn code của m&igrave;nh một c&aacute;ch tốt hơn do bạn hiểu một c&aacute;ch cụ thể những g&igrave; c&oacute; thể sẽ xảy ra nếu như những exceptions xuất hiện hay một đoạn code nhỏ gặp lỗi.</p>\r\n\r\n<p>Hiểu biết s&acirc;u hơn về đoạn code l&agrave;m cho việc debug trở n&ecirc;n dễ d&agrave;ng v&agrave; gi&uacute;p đoạn code c&oacute; khả năng kh&aacute;ng lỗi cao hơn.</p>\r\n\r\n<h2>Logs, logs, logs</h2>\r\n\r\n<p>H&atilde;y ghi lại log. Kh&ocirc;ng bao giờ logs trở n&ecirc;n thừa th&atilde;i.</p>\r\n\r\n<p>C&aacute;c log thực sự l&agrave; cứu c&aacute;nh h&agrave;ng đầu cho việc debug v&agrave; theo d&otilde;i ứng dụng đang chạy tr&ecirc;n m&ocirc;i trường production. Bạn n&ecirc;n ghi lại log cho mỗi bước ch&iacute;nh của chương tr&igrave;nh, bất cứ t&iacute;nh to&aacute;n quan trọng, errors, exceptions hay kết quả bất thường n&agrave;o. Việc ghi lại log thời gian c&aacute;c sự kiện đ&oacute; diễn ra cũng c&oacute; thể trở n&ecirc;n hữu hiệu cho việc theo d&otilde;i. Tất cả những th&ocirc;ng tin n&agrave;y gi&uacute;p cho việc x&aacute;c định ch&iacute;nh x&aacute;c bước n&agrave;o trong hệ thống gặp sự cố trở n&ecirc;n đơn giản hơn.</p>\r\n\r\n<p>C&oacute; rất nhiều ng&ocirc;n ngữ lập tr&igrave;nh phổ biến như Python sử dụng hệ thống ghi log ri&ecirc;ng với rất nhiều chức năng hữu &iacute;ch m&agrave; bạn c&oacute; thể t&igrave;m hiểu. Nếu phần mềm của bạn chạy dưới dạng ứng dụng SaaS th&igrave; c&oacute; thể bạn sẽ muốn c&acirc;n nhắc việc ghi log tập trung ngo&agrave;i thiết bị. Bằng c&aacute;ch n&agrave;y khi một m&aacute;y chủ thuộc hệ thống gặp sự cố th&igrave; bạn cũng c&oacute; thể kh&ocirc;i phục lại c&aacute;c logs một c&aacute;ch dễ d&agrave;ng!</p>\r\n', '2018-10-09 13:58:32', 6, 'shareit-1538046116.jpg', 314, 0, 3, 0),
(16, 'Đã có phiên bản Android Studio 3.2', 'Google đã phát hành bản cập nhật mới nhất cho hệ điều hành Android IDE – Android Studio 3.2.', '<p>Google đ&atilde; ph&aacute;t h&agrave;nh bản cập nhật mới nhất cho hệ điều h&agrave;nh Android IDE &ndash; Android Studio 3.2.&nbsp;Bản cập nhật IDE lần đầu ti&ecirc;n được c&ocirc;ng bố tại sự kiện Google I / O&rsquo;18 v&agrave;o th&aacute;ng 5.&nbsp;Kể từ đ&oacute; đến nay, nh&oacute;m ph&aacute;t triển Android đ&atilde; cập nhật v&agrave; bổ sung hơn 20 t&iacute;nh năng mới nhằm v&agrave;o việc cải thiện chất lượng bản ph&aacute;t h&agrave;nh.</p>\r\n\r\n<p>Google đưa ra khuyến nghị c&aacute;c lập tr&igrave;nh vi&ecirc;n sử dụng Android Studio 3.2 n&ecirc;n chuyển sang sử dụng Android App Bundle, đ&acirc;y l&agrave; định dạng xuất bản ứng dụng mới.&nbsp;Theo nh&oacute;m ph&aacute;t triển Android cho biết c&oacute; tới 64% những người d&ugrave;ng đầu ti&ecirc;n cảm thấy h&agrave;i l&ograve;ng khi sử dụng bản n&acirc;ng cấp mới, bằng c&aacute;ch sử dụng APK kế thừa gi&uacute;p cho ứng dụng trở n&ecirc;n tinh gọn hơn rất nhiều.</p>\r\n\r\n<p>Một trong những điểm s&aacute;ng đ&aacute;ng ch&uacute; &yacute; trong phi&ecirc;n bản Android Studio 3.2 phải kể đến l&agrave; bộ c&ocirc;ng cụ Energy Profiler, bộ c&ocirc;ng cụ gi&uacute;p dự đo&aacute;n v&agrave; c&aacute;ch cải thiện thời lượng sử dụng pin của ứng dụng ứng dụng của bạn đang sử dụng thời lượng pin &ldquo;Nguy&ecirc;n l&yacute; cơ bản của c&ocirc;ng cụ n&agrave;y l&agrave; gi&uacute;p ứng dụng ph&acirc;n phối dung lượng Pin đ&uacute;ng thời điểm, đ&uacute;ng l&uacute;c &rdquo;Jamal Eason, gi&aacute;m đốc sản phẩm của Android chia sẻ</p>\r\n\r\n<p>Android Studio 3.2 c&ograve;n&nbsp;bổ sung th&ecirc;m một t&iacute;nh năng gọi l&agrave; Android Emulator Snapshots, cho ph&eacute;p c&aacute;c nh&agrave; ph&aacute;t triển chụp nhanh trạng th&aacute;i hiện tại của tr&igrave;nh giả lập, lưu trạng th&aacute;i của m&agrave;n h&igrave;nh, ứng dụng v&agrave; c&agrave;i đặt.</p>\r\n\r\n<p>&ldquo;Bằng c&aacute;ch sử dụng Android Studio 3.2, bạn cũng c&oacute; thể ph&aacute;t triển c&aacute;c c&ocirc;ng nghệ mới nhất từ ​​Android Jetpack, đến c&aacute;c API mới nhất trong Google Artificial Intelligence (AI) với Android Slices&rdquo;, Eason viết.</p>\r\n\r\n<p>Ngo&agrave;i ra, bản cập nhật c&ograve;n bổ sung th&ecirc;m 20 t&iacute;nh năng kh&aacute;c cũng như c&aacute;c cải tiến chất lượng k&eacute;m.&nbsp;C&aacute;c t&iacute;nh năng kh&aacute;c bao gồm hỗ trợ Slices, dữ liệu mẫu, hỗ trợ chỉnh sửa CMakeList v&agrave; trợ l&yacute; đọc tin</p>\r\n', '2018-10-08 15:20:26', 8, 'shareit-post-1538456092.png', 1, 0, 8, 0),
(17, 'Elasticsearch dưới góc nhìn đơn giản hơn?', 'Elasticsearch (ES) cơ bản là “công cụ” hỗ trợ tìm kiếm văn bản, bất cứ cái gì có dạng văn bản text, string, file (PDF, word, excel) … là nó hỗ trợ tìm kiếm. ', '<h2>Lời n&oacute;i đầu</h2>\r\n\r\n<p>Mặc d&ugrave;, c&oacute; rất nhiều b&agrave;i viết giới thiệu về Full Text Search, Elasticsearch, Elasticsearch trong Rails, c&aacute;ch c&agrave;i cắm, sử dụng &hellip;,tr&ecirc;n Viblo cũng như tr&ecirc;n Internet m&agrave; c&aacute;c bạn c&oacute; thể dễ d&agrave;ng t&igrave;m kiếm được. Nhưng m&igrave;nh vẫn muốn viết 1 b&agrave;i về Elasticsearch dưới g&oacute;c nh&igrave;n của m&igrave;nh để cho c&aacute;c bạn mới l&agrave;m việc với Elasticsearch sẽ c&oacute; c&aacute;i nh&igrave;n dễ d&agrave;ng hơn với &ldquo;c&ocirc;ng cụ&rdquo; search nổi tiếng v&agrave; v&ocirc; c&ugrave;ng mạnh mẽ n&agrave;y.</p>\r\n\r\n<h2>Elasticsearch l&agrave; g&igrave;?</h2>\r\n\r\n<p>M&igrave;nh xin mạn ph&eacute;p diễn giải theo &yacute; hiểu của m&igrave;nh :v, c&ograve;n để c&oacute; định nghĩa ch&iacute;nh x&aacute;c, v&agrave; đầy đủ nhất c&aacute;c bạn c&oacute; thể tham khảo tr&ecirc;n Google th&ocirc;ng qua keyword: &ldquo;Elasticsearch l&agrave; g&igrave;?&rdquo; sẽ ra cơ số kết quả nha.</p>\r\n\r\n<ul>\r\n	<li>Theo &yacute; hiểu của m&igrave;nh th&igrave; Elasticsearch (ES) cơ bản l&agrave; &ldquo;c&ocirc;ng cụ&rdquo; hỗ trợ t&igrave;m kiếm văn bản, bất cứ c&aacute;i g&igrave; c&oacute; dạng văn bản text, string, file (PDF, word, excel) &hellip; l&agrave; n&oacute; hỗ trợ t&igrave;m kiếm. Ngo&agrave;i ra c&ograve;n v&agrave;i c&aacute;i kiểu như thu thập, đ&aacute;nh gi&aacute; kết quả t&igrave;m kiếm &hellip; th&igrave; m&igrave;nh tạm thời kh&ocirc;ng đề cập đến nha.</li>\r\n	<li>Vậy tại sao phải d&ugrave;ng ES trong khi t&igrave;m kiếm văn bản c&oacute; thể sử dụng c&acirc;u lệnh like SQL cũng được m&agrave;? OK, v&iacute; dụ dưới đ&acirc;y sẽ phần n&agrave;o giải th&iacute;ch cho c&aacute;c bạn hiểu. V&iacute; dụ c&oacute; 1 từ kh&oacute;a l&agrave; &ldquo;one&rdquo;:(1) Nếu search bằng truy vấn LIKE &ldquo;%one%&rdquo; th&igrave; kết quả sẽ chỉ cần chứa &ldquo;one&rdquo; l&agrave; ra, vd: &ldquo;phone&rdquo;, &ldquo;zone&rdquo;, &ldquo;money&rdquo;, &ldquo;alone&rdquo; &hellip; n&oacute;i chung sẽ l&agrave; 1 list kết quả kh&ocirc;ng mong muốn C&ograve;n search bằng ES th&igrave; g&otilde; &ldquo;one&rdquo; sẽ chỉ c&oacute; &ldquo;one&rdquo; được trả về m&agrave; th&ocirc;i ^^\r\n	<p>(2) V&iacute; dụ nữa l&agrave; &hellip;, tiếng Việt m&igrave;nh đi, bạn c&oacute; từ kh&oacute;a c&oacute; dấu l&agrave; &ldquo;Sơn T&ugrave;ng&rdquo;, m&agrave; lại g&otilde; &ldquo;Son Tung&rdquo; th&igrave; truy vấn LIKE l&agrave; sẽ kh&ocirc;ng trả về được kết qủa đ&oacute; (như thế l&agrave; hỏng rồi, t&igrave;m Sếp m&agrave; m&atilde;i kh&ocirc;ng ra ), nhưng c&aacute;i n&agrave;y ES l&agrave;m được nha</p>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<p>(3) Về Perfomance th&igrave; ES sẽ l&agrave; tốt hơn, truy vấn LIKE sẽ t&igrave;m kiếm đơn thuần to&agrave;n văn bản kh&ocirc;ng sử dụng&nbsp;<code>index</code>, nghĩa l&agrave; tập dữ liệu c&agrave;ng lớn th&igrave; t&igrave;m kiếm c&agrave;ng l&acirc;u, trong khi ES lại &ldquo;đ&aacute;nh index&rdquo; cho c&aacute;c trường được chọn để t&igrave;m kiếm, c&aacute;i n&agrave;y th&igrave; hồi sau đến đoạn Demo m&igrave;nh n&oacute; r&otilde; hơn c&ograve;n giờ c&aacute;c bạn cứ tạm c&ocirc;ng nhận như vậy đi (lol)</p>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Elasticsearch hoạt động như thế n&agrave;o?</h2>\r\n\r\n<p>Elasticsearch l&agrave; 1 server ri&ecirc;ng biệt để &ldquo;phục vụ&rdquo; việc t&igrave;m kiếm dữ liệu. Hiểu đơn giản th&igrave; l&agrave; như thế n&agrave;y:</p>\r\n\r\n<ul>\r\n	<li>ES sẽ chạy 1 cổng (dưới local defaul l&agrave; 9200), App m&igrave;nh chạy 1 cổng ri&ecirc;ng (dưới local hay l&agrave; 3000). Người ta cũng c&oacute; thể d&ugrave;ng ES l&agrave; DB ch&iacute;nh nhưng thường kh&ocirc;ng ai l&agrave;m thế v&igrave; c&aacute;i g&igrave; cũng c&oacute; nhiệm vụ ri&ecirc;ng biệt của n&oacute;, ES kh&ocirc;ng mạnh trong c&aacute;c thao t&aacute;c CRUD, n&ecirc;n thường sẽ d&ugrave;ng song song với 1 DB ch&iacute;nh (SQL, MySQL, MongoDB &hellip;)</li>\r\n	<li>T&oacute;m gọn, m&ocirc; tả theo c&aacute;ch hiểu của m&igrave;nh th&igrave; qu&aacute; tr&igrave;nh hoạt động của ES sẽ được m&ocirc; tả như sau:(1) Tạo Mapping\r\n	<p>(2) Reindex Data &amp; Push Data l&ecirc;n Server ES</p>\r\n\r\n	<p>(3) Get Data từ server ES về</p>\r\n	</li>\r\n</ul>\r\n\r\n<h3>1. Tạo Mapping</h3>\r\n\r\n<p>Mapping l&agrave; qu&aacute; tr&igrave;nh định nghĩa l&agrave;m thế n&agrave;o một document v&agrave; c&aacute;c fields của n&oacute; được lưu trữ v&agrave; đ&aacute;nh index. Cụ thể sử dụng mapping để định nghĩa:</p>\r\n\r\n<ul>\r\n	<li>Fields n&agrave;o được sử dụng như full text search, fields n&agrave;o cần anaylstic (ph&acirc;n t&iacute;ch)</li>\r\n	<li>Field n&agrave;o chứa numbers, dates hay geolocations &hellip;</li>\r\n	<li>Kiểu dữ liệu của fields</li>\r\n	<li>C&aacute;c Custom kh&aacute;c &hellip;</li>\r\n</ul>\r\n\r\n<p>V&iacute; dụ:</p>\r\n\r\n<ul>\r\n	<li>C&oacute; 1 bảng Faq với c&aacute;c column (Title, Question, Answer, Date, Priority, Tag, Color &hellip;.) mục đ&iacute;ch t&igrave;m kiếm chỉ theo 3 trường l&agrave; Title, Question, Answer th&igrave; ch&uacute;ng ta chỉ cần x&acirc;y dựng Mapping đ&aacute;nh Index cho Title, Question, Answer m&agrave; th&ocirc;i, c&ograve;n c&aacute;c trường kh&aacute;c kh&ocirc;ng cần care</li>\r\n</ul>\r\n\r\n<p>Tạo Mapping l&agrave; phần đầu ti&ecirc;n cũng l&agrave; phần quan trọng nhất trong qu&aacute; tr&igrave;nh x&acirc;y dựng l&ecirc;n base ES, n&ecirc;n c&aacute;c bạn ch&uacute; &yacute; tổ chức Mapping sao cho hợp l&yacute; v&agrave; tối ưu nhất</p>\r\n\r\n<h3>2. Reindex Data</h3>\r\n\r\n<p>Qu&aacute; tr&igrave;nh n&agrave;y gồm 2 phần đ&aacute;nh Index v&agrave; đẩy dữ liệu l&ecirc;n ES</p>\r\n\r\n<h4>2.1 Inverted Index</h4>\r\n\r\n<ul>\r\n	<li>Sở dĩ ES trả về kết quả search cực nhanh bởi v&igrave; thay v&igrave; t&igrave;m kiếm text by text, ES t&igrave;m kiếm bởi&nbsp;<code>inverted index</code>. C&aacute;i n&agrave;y th&igrave; hơi trừu tượng 1 ch&uacute;t, hiểu đơn giản th&igrave; dữ liệu l&agrave; 1 quyển s&aacute;ch, để t&igrave;m kiếm nhanh th&igrave; người ta sinh ra 1 c&aacute;i l&agrave; mục lục đ&aacute;nh dấu c&aacute;c content, th&igrave; c&aacute;ch mục lục bản chất giống như việc đ&aacute;nh index vậy.</li>\r\n	<li>Việc đ&aacute;nh Index nghe chừng kh&aacute; đơn giản nhưng b&ecirc;n dưới ES l&agrave;m kh&aacute; nhiều việc. Mysql b&igrave;nh thường sẽ đ&aacute;nh theo c&aacute;c trường trong bảng cụ thể như (name, email &hellip;), Tuy nhi&ecirc;n ES sẽ đ&aacute;nh index theo đơn vị l&agrave; term, cụ thể như sau:</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<p>1</p>\r\n\r\n				<p>2</p>\r\n\r\n				<p>3</p>\r\n\r\n				<p>4</p>\r\n\r\n				<p>5</p>\r\n				</td>\r\n				<td>\r\n				<p>&nbsp;</p>\r\n\r\n				<p>Title (A1) = &quot;Hello World&quot;</p>\r\n\r\n				<p>Question (A2) = &quot;What is the World&quot;</p>\r\n\r\n				<p>Answer (A3) = &quot;Hello Baby&quot;</p>\r\n\r\n				<p><code>&nbsp;</code></p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n	<li>Vậy th&igrave; Invered Index sẽ như sau\r\n	<p>&nbsp;</p>\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<p>1</p>\r\n\r\n				<p>2</p>\r\n\r\n				<p>3</p>\r\n\r\n				<p>4</p>\r\n\r\n				<p>5</p>\r\n\r\n				<p>6</p>\r\n\r\n				<p>7</p>\r\n\r\n				<p>8</p>\r\n				</td>\r\n				<td>\r\n				<p>&nbsp;</p>\r\n\r\n				<p>&quot;Hello&quot; =&gt; {A1, A3}</p>\r\n\r\n				<p>&quot;World&quot; =&gt; {A1, A2}</p>\r\n\r\n				<p>&quot;What&quot; =&gt; {A2}</p>\r\n\r\n				<p>&quot;is&quot; =&gt; {A2}</p>\r\n\r\n				<p>&quot;the&quot; =&gt; {A2}</p>\r\n\r\n				<p>&quot;Baby&quot; =&gt; {A3}</p>\r\n\r\n				<p>&nbsp;</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n	<li>C&oacute; thể thấy c&aacute;c từ sẽ được t&aacute;ch th&agrave;nh tổ hợp c&aacute;c Term. V&agrave; c&ocirc;ng việc t&igrave;m kiếm sẽ dựa tr&ecirc;n tổ hợp c&aacute;c term n&agrave;y. Ở đ&acirc;y sẽ ph&aacute;t sinh 1 c&acirc;u hỏi l&agrave; l&agrave;m sao ES t&aacute;ch được c&aacute;c chuỗi th&agrave;nh c&aacute;c Term? Phần n&agrave;y li&ecirc;n quan đến Core b&ecirc;n trong ES n&oacute; giải quyết rồi, m&igrave;nh chỉ giải th&iacute;ch 1 ch&uacute;t:</li>\r\n	<li><code>Tokenize</code>&nbsp;l&agrave; b&agrave;i to&aacute;n quan trọng trong thuật to&aacute;n t&igrave;m kiếm của ES, trong đ&oacute; c&oacute; 2 kỹ thuật cơ bản:(1) N-Gram Morphological Analysis: l&agrave; kỹ thuật chia c&aacute;c chuỗi to th&agrave;nh c&aacute;c chuỗi con theo trọng số với độ d&agrave;i N, N = (1..3), v&iacute; dụ N = 2, khi t&aacute;ch chuối &ldquo;HELLO WORLD&rdquo; ta sẽ được c&aacute;c term như sau\r\n	<p>&nbsp;</p>\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<p>1</p>\r\n\r\n				<p>2</p>\r\n\r\n				<p>3</p>\r\n				</td>\r\n				<td>\r\n				<p>&nbsp;</p>\r\n\r\n				<p>&quot;HELLO WORLD&quot; =&gt; {&quot;HE&quot;, &quot;EL&quot;, &quot;LL&quot;, &quot;LO&quot;, &quot;O &quot;, &quot; W&quot;, &quot;WO&quot;, &quot;OR&quot;, &quot;RL&quot;, &quot;LD&quot;}</p>\r\n\r\n				<p>&nbsp;</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<br />\r\n	(2) Morphological Analysis&nbsp;<a href=\"http://en.wikipedia.org/wiki/Morphology_(linguistics)\" rel=\"noopener nofollow\" target=\"_blank\">http://en.wikipedia.org/wiki/Morphology_(linguistics)</a>&nbsp;(MA) l&agrave; kỹ thuật xử l&yacute; ng&ocirc;n ngữ tự nhi&ecirc;n (National Language Procesing). Đơn giản l&agrave; kỹ thu&acirc;t t&aacute;ch c&aacute;c chuỗi th&agrave;nh từ c&oacute; nghĩa dựa theo ng&ocirc;n ngữ, v&iacute; dụ &ldquo;HELLO WORLD&rdquo; sẽ được ph&acirc;n t&iacute;ch như sau:\r\n\r\n	<p>&nbsp;</p>\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<p>1</p>\r\n\r\n				<p>2</p>\r\n\r\n				<p>3</p>\r\n				</td>\r\n				<td>\r\n				<p>&nbsp;</p>\r\n\r\n				<p>&quot;HELLO WORLD&quot; =&gt; {&quot;HELLO&quot;, &quot;WORLD&quot;}</p>\r\n\r\n				<p>&nbsp;</p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	<br />\r\n	2 kỹ thuật n&agrave;y sẽ được phối kết hợp với nhau v&igrave; ng&ocirc;n ngữ kh&aacute; đa dạng v&agrave; lu&ocirc;n thay đổi n&ecirc;n đ&ocirc;i khi chỉ sử dụng kỹ thuật MA sẽ kh&ocirc;ng ch&iacute;nh x&aacute;c trong 1 số trường hợp nhất định</li>\r\n</ul>\r\n\r\n<h4>2.2 Push Data l&ecirc;n Server ES</h4>\r\n\r\n<ul>\r\n	<li>Sau khi đ&aacute;nh Index xong, ch&uacute;ng ta phải push dữ liệu l&ecirc;n Server ES. Về nguy&ecirc;n l&yacute; th&igrave; ch&iacute;nh l&agrave; gửi request đến server của ES, may mắn thay phần n&agrave;y trong Rails ch&uacute;ng ta c&oacute; c&aacute;c Gem hỗ trợ, chỉ cần g&otilde; c&aacute;c method được Gem define để đẩy l&ecirc;n, kh&ocirc;ng phải x&acirc;y dựng Request để gửi l&ecirc;n (yaoming). C&oacute; rất nhiều gem để implement ES trong Rails, tuy nhi&ecirc;n trong phạm vi b&agrave;i n&agrave;y m&igrave;nh sẽ chỉ giới thiệu cũng như Demo c&aacute;ch implement ES trong Ruby on Rails gem&nbsp;<code>Searchkick</code></li>\r\n	<li>V&agrave; việc push dữ liệu l&ecirc;n ES với gem&nbsp;<code>Searchkick</code>&nbsp;rất đơn giản, v&iacute; dụ ta cần đẩy bảng Faq l&ecirc;n server ES th&igrave; đơn giản l&agrave;m như sau:\r\n	<p>&nbsp;</p>\r\n\r\n	<table>\r\n		<tbody>\r\n			<tr>\r\n				<td>\r\n				<p>1</p>\r\n\r\n				<p>2</p>\r\n\r\n				<p>3</p>\r\n				</td>\r\n				<td>\r\n				<p>&nbsp;</p>\r\n\r\n				<p>Faq.reindex</p>\r\n\r\n				<p><code>&nbsp;</code></p>\r\n				</td>\r\n			</tr>\r\n		</tbody>\r\n	</table>\r\n	</li>\r\n	<li><code>reindex</code>&nbsp;l&agrave; method được gem Searchkick define hỗ trợ cho việc push data l&ecirc;n server ES. Để t&igrave;m hiểu hơn về kỹ thuật n&agrave;y c&aacute;c bạn c&oacute; thể tham khảo tại&nbsp;<a href=\"https://github.com/ankane/searchkick\" rel=\"noopener nofollow\" target=\"_blank\">đ&acirc;y</a>.</li>\r\n	<li>Xong xu&ocirc;i qu&aacute; tr&igrave;nh Reindex Data dưới local c&aacute;c bạn c&oacute; thể check lại bằng c&aacute;ch v&agrave;o url sau:&nbsp;<a href=\"http://localhost:9200/all/mapping\" rel=\"noopener nofollow\" target=\"_blank\">http://localhost:9200/all/mapping</a>&nbsp;để xem lại th&agrave;nh quả&nbsp;</li>\r\n</ul>\r\n\r\n<h3>3. Get Data từ server Elasticsearch về</h3>\r\n\r\n<p>Sau khi dữ liệu đ&atilde; c&oacute; tr&ecirc;n ES, ch&uacute;ng ta phải lấy về để d&ugrave;ng, giống như SQL b&igrave;nh thường, khi muốn lấy data về ch&uacute;ng ta phải sử dụng c&aacute;c lệnh SQL kiểu như&nbsp;<code>Select</code>&nbsp;&hellip; th&igrave; b&ecirc;n ES cũng define kiểu query của ri&ecirc;ng họ, được gọi l&agrave; query DSL. Về cơ bản th&igrave; query n&agrave;y sẽ tạo 1 request với format nhất định v&agrave; gửi request n&agrave;y l&ecirc;n server ES (cổng 9200) để get dữ liệu về. Sẽ kiểu như thế n&agrave;y</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p>&nbsp;</p>\r\n\r\n			<p>Faquestion Search (11.6ms)&nbsp;&nbsp;curl http://localhost:9200/faquestions_development/_search?pretty -H &#39;Content-Type: application/json&#39; -d &#39;{&quot;query&quot;:{&quot;bool&quot;:{&quot;must&quot;:[],&quot;filter&quot;:[{&quot;term&quot;:{&quot;field_id&quot;:1}}],&quot;must_not&quot;:{&quot;exists&quot;:{&quot;field&quot;:&quot;deleted_at&quot;}}}},&quot;size&quot;:10000,&quot;from&quot;:0,&quot;highlight&quot;:{&quot;fields&quot;:{&quot;title.analyzed&quot;:{},&quot;question.analyzed&quot;:{},&quot;answer.analyzed&quot;:{}}}}&#39;</p>\r\n\r\n			<p>&nbsp;</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>X&acirc;y dựng query dsl l&agrave; 1 phần quan trọng kh&ocirc;ng k&eacute;m với việc x&acirc;y dựng mapping m&agrave; ph&iacute;a đầu m&igrave;nh c&oacute; n&oacute;i đến, để n&oacute;i s&acirc;u hơn về query n&agrave;y v&agrave; c&aacute;c kiểu query th&ocirc;ng thường từ cơ bản đến n&acirc;ng cao m&igrave;nh sẽ đề cập th&ecirc;m khi Implement ES với 1 ứng dụng Rails ở phần tới.</p>\r\n\r\n<h2>Tạm kết</h2>\r\n\r\n<p>Tr&ecirc;n đ&acirc;y l&agrave; 1 c&aacute;ch giới thiệu về ES theo g&oacute;c nh&igrave;n v&agrave; kinh nghiệm của m&igrave;nh, hy vọng c&aacute;ch nh&igrave;n nhận vấn đề n&agrave;y sẽ &iacute;t nhiều mang lại sự đơn giản cho c&aacute;c bạn khi mới tiếp cận l&agrave;m việc với ES. Trong phần tới m&igrave;nh sẽ đi s&acirc;u hơn về việc triển khai ES trong 1 ứng dụng Rails cụ thể (từ việc c&agrave;i cắm Server Elasticsearch ở local, x&acirc;y dựng Mapping, đ&aacute;nh Index data v&agrave; query lấy dữ liệu về &hellip;)</p>\r\n', '2018-10-10 05:28:08', 8, 'shareit-post-1538457582.jpg', 2, 1, 2, 0),
(18, 'Tất tần tật về scandal rò rỉ thông tin 50 triệu người dùng Facebook', 'Facebook đang ra sức khắc phục sự cố bảo mật lớn khi mà thông tin tài khoản của hàng triệu người dùng bị lộ.', '<p>Facebook đang ra sức khắc phục sự cố bảo mật lớn khi m&agrave; th&ocirc;ng tin t&agrave;i khoản của h&agrave;ng triệu người d&ugrave;ng bị lộ. Đ&acirc;y cũng l&agrave; một năm đầy thử th&aacute;ch đối với Facebook khi dư crấn từ vụ b&ecirc; bối Cambridge Analytica vẫn chưa kịp lắng xuống, c&ocirc;ng ty đang cố gắng để lấy lại niềm tin của người d&ugrave;ng sau khi một sự cố bảo mật kh&aacute;c về dữ liệu người d&ugrave;ng lại xuất hiện.</p>\r\n\r\n<p>Sau đ&acirc;y l&agrave; mọi thứ m&agrave; bạn cần để biết</p>\r\n\r\n<h3><strong>Chuyện g&igrave; đ&atilde; xảy ra?</strong></h3>\r\n\r\n<p>Facebook cho biết c&oacute; &iacute;t nhất 50 triệu t&agrave;i khoản người d&ugrave;ng được x&aacute;c nhận l&agrave; c&oacute; nguy cơ bị x&acirc;m phạm sau khi hacker lợi dụng một lỗ hổng bảo mật cho ph&eacute;p truy cập v&agrave;o dữ liệu của user. Ngo&agrave;i ra, c&ocirc;ng ty cũng đ&atilde; ngăn chặn th&ecirc;m 40 triệu t&agrave;i khoản bổ sung kh&aacute;c như một biện ph&aacute;p xử l&iacute; thận trọng.</p>\r\n\r\n<h3><strong>Dữ liệu n&agrave;o m&agrave; hacker nhắm tới?</strong></h3>\r\n\r\n<p>Facebook CEO Mark Zuckerberg n&oacute;i rằng c&ocirc;ng ty vẫn chưa ph&aacute;t hiện ra bất kỳ t&agrave;i khoản bị x&acirc;m nhập v&agrave; truy cập tr&aacute;i ph&eacute;p &ndash; mặc d&ugrave; vậy n&oacute; c&oacute; thể thay đổi bất cứ l&uacute;c n&agrave;o. Zuckerberg n&oacute;i rằng những kẻ tấn c&ocirc;ng đang sử dụng c&aacute;c API Facebook để thu thập một số th&ocirc;ng tin về user như &ldquo;t&ecirc;n, giới t&iacute;nh v&agrave; qu&ecirc; qu&aacute;n&rdquo; vốn được lưu trữ trong user&rsquo;s profile page.</p>\r\n\r\n<h3><strong>Dữ liệu n&agrave;o vẫn được an to&agrave;n?</strong></h3>\r\n\r\n<p>Facebook cho biết c&oacute; vẻ như những tin nhắn c&aacute; nh&acirc;n của người d&ugrave;ng vẫn được an to&agrave;n. Ngo&agrave;i ra, kh&ocirc;ng c&oacute; th&ocirc;ng tin của bất k&igrave; thẻ t&iacute;n dụng n&agrave;o bị lấy cắp v&agrave; sử dụng tr&aacute;i ph&eacute;p. Facebook vẫn đang tiếp tục qu&aacute; tr&igrave;nh điều tra của m&igrave;nh.</p>\r\n\r\n<h3><strong>Access token? l&agrave; g&igrave;? T&ocirc;i c&oacute; cần phải thay đổi mật khẩu của m&igrave;nh kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Khi bạn nhập t&ecirc;n người d&ugrave;ng v&agrave; mật khẩu của m&igrave;nh tr&ecirc;n hầu hết c&aacute;c trang web v&agrave; ứng dụng, bao gồm cả Facebook, th&igrave; tr&igrave;nh duyệt hoặc thiết bị của bạn sẽ được đặt m&atilde; th&ocirc;ng b&aacute;o truy cập (access token). Điều n&agrave;y gi&uacute;p bạn đăng nhập m&agrave; kh&ocirc;ng phải nhập mật khẩu nhiều lần. Tuy nhi&ecirc;n, m&atilde; th&ocirc;ng b&aacute;o kh&ocirc;ng lưu trữ mật khẩu của bạn &ndash; v&igrave; vậy bạn kh&ocirc;ng cần phải thay đổi mật khẩu của m&igrave;nh.</p>\r\n\r\n<h3><strong>Đ&acirc;y c&oacute; phải l&agrave; l&yacute; do tại sao Facebook đăng xuất t&ocirc;i khỏi t&agrave;i khoản của m&igrave;nh kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Đ&uacute;ng vậy, Facebook sẽ reset mọi access token của tất cả người d&ugrave;ng bị ảnh hưởng. Điều đ&oacute; c&oacute; nghĩa l&agrave; khoảng 90 triệu người d&ugrave;ng đ&atilde; bị đăng xuất khỏi t&agrave;i khoản của họ tr&ecirc;n mọi thiết bị trong ng&agrave;y h&ocirc;m qua.</p>\r\n\r\n<h3><strong>Hacker đ&atilde; tổ chức cuộc tấn c&ocirc;ng n&agrave;y khi n&agrave;o?</strong></h3>\r\n\r\n<p>Lỗ hổng n&agrave;y đ&atilde; được nhắc tới v&agrave;o th&aacute;ng 7 năm 2017 nhưng Facebook kh&ocirc;ng biết về n&oacute; cho đến th&aacute;ng n&agrave;y, v&agrave;o ng&agrave;y 16 th&aacute;ng 9 năm 2018, khi c&ocirc;ng ty ph&aacute;t hiện một sự tăng đột biến trong c&aacute;c hoạt động bất thường từ người d&ugrave;ng. Điều đ&oacute; c&oacute; nghĩa l&agrave; tin tặc c&oacute; thể đ&atilde; c&oacute; quyền truy cập v&agrave;o dữ liệu người d&ugrave;ng trong một thời gian rất d&agrave;i. V&igrave; vậy m&agrave; ch&iacute;nh Facebook cũng kh&ocirc;ng chắc chắn thời điểm ch&iacute;nh x&aacute;c khi cuộc tấn c&ocirc;ng bắt đầu.</p>\r\n\r\n<h3><strong>Thủ phạm l&agrave; ai?</strong></h3>\r\n\r\n<p>Facebook hiện vẫn kh&ocirc;ng biết ai đ&atilde; tấn c&ocirc;ng trang web, nhưng ph&iacute;a FBI vẫn đang điều tra.</p>\r\n\r\n<p>Tuy nhi&ecirc;n, trước đ&acirc;y Facebook đ&atilde; t&igrave;m thấy bằng chứng về những nỗ lực của Nga nhằm can thiệp v&agrave; ảnh hưởng đến cuộc bầu cử giữa Trump v&agrave; Hilary &ndash; nhưng kh&ocirc;ng c&oacute; nghĩa l&agrave; Nga đứng đằng sau vụ tấn c&ocirc;ng mới n&agrave;y. Trong qu&aacute; khứ, FBI đ&atilde; mất hơn hai năm để x&aacute;c nhận rằng Bắc Triều Ti&ecirc;n đứng sau vụ tấn c&ocirc;ng v&agrave;o Sony trong năm 2016 &ndash; v&igrave; vậy ch&uacute;ng ta c&oacute; thể sẽ phải chờ đợi một thời gian nữa.</p>\r\n\r\n<h3><strong>L&agrave;m thế n&agrave;o m&agrave; những kẻ tấn c&ocirc;ng lại truy cập được v&agrave;o dữ liệu của người d&ugrave;ng?</strong></h3>\r\n\r\n<p>Kh&ocirc;ng phải một, nhưng c&oacute; tới ba lỗ hổng bảo mật kh&aacute;c nhau.</p>\r\n\r\n<p>V&agrave;o th&aacute;ng 7 năm 2017, Facebook đ&atilde; v&ocirc; t&igrave;nh để ra ba lỗ hổng n&agrave;y trong video uploader, theo lời Guy Rosen, ph&oacute; chủ tịch quản l&yacute; sản phẩm của Facebook, trong một cuộc họp với c&aacute;c ph&oacute;ng vi&ecirc;n. Khi sử dụng t&iacute;nh năng &ldquo;View As&rdquo; để xem hồ sơ của bạn với tư c&aacute;ch l&agrave; người kh&aacute;c, video uploader thỉnh thoảng xuất hiện khi m&agrave; n&oacute; đ&aacute;ng lẽ ho&agrave;n to&agrave;n kh&ocirc;ng n&ecirc;n hiển thị.</p>\r\n\r\n<p>Khi n&oacute; xuất hiện, n&oacute; tạo ra một access token bằng c&aacute;ch sử dụng th&ocirc;ng tin người đang d&ugrave;ng. Nếu lấy được token đ&oacute; th&igrave; kẻ tấn c&ocirc;ng c&oacute; thể đăng nhập v&agrave;o t&agrave;i khoản của người kh&aacute;c.</p>\r\n\r\n<h3><strong>Sự cố đ&atilde; được khắc phục chưa?</strong></h3>\r\n\r\n<p>Facebook cho biết họ đ&atilde; sửa lỗ hổng bảo mật n&agrave;y v&agrave;o ng&agrave;y 27 th&aacute;ng 9, v&agrave; sau đ&oacute; bắt đầu reset lại access token của mọi người để bảo vệ t&iacute;nh bảo mật của t&agrave;i khoản user.</p>\r\n\r\n<h3><strong>Điều n&agrave;y c&oacute; ảnh hưởng đến t&agrave;i khoản WhatsApp v&agrave; Instagram kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Facebook cho biết h&atilde;ng vẫn chưa chắc chắn liệu t&agrave;i khoản Instagram c&oacute; bị ảnh hưởng hay kh&ocirc;ng nhưng c&ocirc;ng ty cũng đ&atilde; thực hiện c&aacute;c biện ph&aacute;p an ninh ngay khi lỗi bị ph&aacute;t hiện ra tr&ecirc;n Facebook. V&igrave; vậy, người d&ugrave;ng Instagram bị ảnh hưởng sẽ phải thực hiện việc li&ecirc;n kết lại với t&agrave;i khoản Facebook của họ tr&ecirc;n Instagram để chuyển b&agrave;i đăng l&ecirc;n Facebook.</p>\r\n\r\n<p>Trong một cuộc họp với c&aacute;c ph&oacute;ng vi&ecirc;n, Facebook cho biết những lỗ hổng n&agrave;y kh&ocirc;ng c&oacute; t&aacute;c động n&agrave;o đối với người d&ugrave;ng WhatsApp.</p>\r\n\r\n<h3><strong>C&aacute;c trang web sử dụng t&agrave;i khoản của Facebook liệu cũng c&oacute; bị ảnh hưởng kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Nếu kẻ tấn c&ocirc;ng lấy được access token Facebook của bạn, th&igrave; ch&uacute;ng kh&ocirc;ng chỉ c&oacute; quyền truy cập v&agrave;o t&agrave;i khoản Facebook của bạn m&agrave; c&ograve;n bất kỳ trang web n&agrave;o kh&aacute;c bạn đ&atilde; sử dụng t&agrave;i khoản Facebook để đăng nhập, như c&aacute;c ứng dụng hẹn h&ograve;, game hoặc dịch vụ truyền trực tuyến.</p>\r\n\r\n<h3><strong>Liệu Facebook c&oacute; bị phạt kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Nếu Facebook bị ph&aacute;t hiện đ&atilde; vi phạm c&aacute;c quy tắc bảo vệ dữ liệu của ch&acirc;u &Acirc;u &ndash; General Data Protection Regulation (GDPR) &ndash; c&ocirc;ng ty c&oacute; thể phải chịu mức phạt l&ecirc;n tới 4% doanh thu to&agrave;n cầu của m&igrave;nh.</p>\r\n\r\n<p>Tuy nhi&ecirc;n, tiền phạt đ&oacute; kh&ocirc;ng thể được t&iacute;nh cho đến khi Facebook biết th&ecirc;m về bản chất của vi phạm v&agrave; rủi ro đối với người d&ugrave;ng.</p>\r\n\r\n<h3><strong>T&ocirc;i c&oacute; thể kiểm tra xem t&agrave;i khoản của m&igrave;nh c&oacute; đang được truy cập đ&uacute;ng c&aacute;ch kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Được chứ! Khi bạn đăng nhập lại v&agrave;o Facebook, bạn c&oacute; thể v&agrave;o mục đăng nhập v&agrave; bảo mật của t&agrave;i khoản sẽ cho ph&eacute;p xem nơi v&agrave; thiết bị bạn sử dụng để đăng nhập. Nếu bạn đ&atilde; bị thu hồi v&agrave; phải đăng nhập lại, bạn sẽ chỉ thấy c&aacute;c thiết bị m&agrave; bản th&acirc;n đang d&ugrave;ng để đăng nhập lại.</p>\r\n\r\n<h3><strong>T&ocirc;i c&oacute; n&ecirc;n x&oacute;a t&agrave;i khoản Facebook của m&igrave;nh kh&ocirc;ng?</strong></h3>\r\n\r\n<p>Điều n&agrave;y ho&agrave;n to&agrave;n t&ugrave;y v&agrave;o bạn! Nhưng trước hết h&atilde;y thử những biện ph&aacute;p như thay mật khẩu cũng như tho&aacute;t đăng nhập c&aacute;c trang web c&oacute; sử dụng t&agrave;i khoản Facebook. Ngo&agrave;i ra, bạn c&oacute; thể chọn lọc v&agrave; x&oacute;a bớt th&ocirc;ng tin của m&igrave;nh nhằm hạn chế ảnh hưởng tới mức thấp nhất.</p>\r\n', '2018-10-10 12:39:13', 8, 'shareit-post-1538467291.jpg', 0, 1, 1, 0);
INSERT INTO `news` (`id`, `name`, `preview`, `detail`, `date_create`, `created_by`, `picture`, `view`, `active`, `cat_id`, `is_slide`) VALUES
(19, 'Top những thuật toán machine learning mà bất cứ Data Scientist', 'Trong bài viết này, tôi sẽ tập trung vào việc phân loại các nhóm thuật toán theo sự giống nhau và phân tích sâu hơn vào từng loại', '<h2><strong>Giới thiệu về thuật to&aacute;n Machine Learning</strong></h2>\r\n\r\n<p>C&oacute; hai c&aacute;ch để ph&acirc;n loại c&aacute;c thuật to&aacute;n Machine Learning m&agrave; bạn c&oacute; thể gặp qua.</p>\r\n\r\n<ol>\r\n	<li>C&aacute;c thuật to&aacute;n được ph&acirc;n loại theo phong c&aacute;ch học tập.</li>\r\n	<li>C&aacute;c thuật to&aacute;n được ph&acirc;n loại dựa tr&ecirc;n sự giống nhau về h&igrave;nh thức hoặc chức năng</li>\r\n</ol>\r\n\r\n<p>N&oacute;i chung, cả hai c&aacute;ch n&agrave;y đều hữu &iacute;ch. Tuy nhi&ecirc;n, trong b&agrave;i viết n&agrave;y, t&ocirc;i sẽ tập trung v&agrave;o việc ph&acirc;n loại c&aacute;c nh&oacute;m thuật to&aacute;n theo sự giống nhau v&agrave; ph&acirc;n t&iacute;ch s&acirc;u hơn v&agrave;o từng loại</p>\r\n\r\n<h3><strong>Ph&acirc;n loại thuật to&aacute;n Machine Learning dựa v&agrave;o c&aacute;ch ch&uacute;ng học tập</strong></h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>C&oacute; nhiều c&aacute;ch kh&aacute;c nhau m&agrave; thuật to&aacute;n c&oacute; thể m&ocirc; h&igrave;nh h&oacute;a một vấn đề v&igrave; n&oacute; li&ecirc;n quan đến sự tương t&aacute;c với trải nghiệm. N&oacute;i c&aacute;ch kh&aacute;c, bạn sẽ cần phải x&aacute;c định được phong c&aacute;ch học tập của một thuật to&aacute;n. Thật may l&agrave; chỉ c&oacute; một v&agrave;i kiểu học tập ch&iacute;nh m&agrave; thuật to&aacute;n Machine Learning c&oacute; thể c&oacute;. Do đ&oacute; m&agrave; bạn phải suy nghĩ kĩ về vai tr&ograve; của dữ liệu input v&agrave; qu&aacute; tr&igrave;nh chuẩn bị m&ocirc;i trường cho thuật to&aacute;n học tập để c&oacute; được kết quả tốt nhất.</p>\r\n\r\n<p>Sau đ&acirc;y, ch&uacute;ng ta h&atilde;y xem x&eacute;t ba phong c&aacute;ch học tập kh&aacute;c nhau trong thuật to&aacute;n Machine Learning:</p>\r\n\r\n<h3><strong>Học tập c&oacute; gi&aacute;m s&aacute;t (Supervised Learning)</strong></h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Về cơ bản, trong thuật to&aacute;n machine Learning c&oacute; gi&aacute;m s&aacute;t n&agrave;y, input data được gọi l&agrave; dữ liệu huấn luyện với kết quả đ&atilde; biết tại một thời điểm. Trong đ&oacute;, một m&ocirc; h&igrave;nh được chuẩn bị th&ocirc;ng qua một qu&aacute; tr&igrave;nh đ&agrave;o tạo để y&ecirc;u cầu c&aacute;c thuật to&aacute;n n&agrave;y đưa ra dự đo&aacute;n. Những dự đo&aacute;n sai sẽ ngay lập tức được th&ocirc;ng b&aacute;o để chỉnh sửa. Như vậy, qu&aacute; tr&igrave;nh đ&agrave;o tạo sẽ tiếp tục cho đến khi m&ocirc; h&igrave;nh đạt được mức ho&agrave;n thiện mong muốn.</p>\r\n\r\n<ul>\r\n	<li>C&aacute;c v&iacute; dụ về vấn đề thường gặp l&agrave; ph&acirc;n loại v&agrave; hồi quy (classification v&agrave; regression).</li>\r\n	<li>C&aacute;c v&iacute; dụ về thuật to&aacute;n bao gồm hồi quy logistic v&agrave; mạng thần kinh (logistic regression v&agrave; back propagation<a href=\"https://data-flair.training/blogs/learning-rules-in-neural-network/\" rel=\"nofollow\" target=\"_new\">&nbsp;Neural Network</a>.).</li>\r\n</ul>\r\n', '2018-10-10 12:09:34', 6, 'shareit-1539173374.jpg', 0, 1, 10, 0),
(20, 'React là front-end JavaScript framework phổ biến nhất', 'Theo số liệu của NPM, software registry và package manager cho JavaScript, React vẫn là framework JavaScript phổ biến nhất, với Angular ở vị trí thứ hai.', '<p>Theo số liệu của NPM, software registry v&agrave; package manager cho JavaScript, React vẫn l&agrave; framework JavaScript phổ biến nhất, với Angular ở vị tr&iacute; thứ hai.</p>\r\n\r\n<p>Theo b&aacute;o c&aacute;o State of JavaScript Frameworks 2017 của NPM, t&iacute;nh đến cuối năm ngo&aacute;i, React chiếm khoảng 0,05% trong số 13 tỷ lượt tải xuống từ registry mỗi th&aacute;ng. Angular, ở vị tr&iacute; thứ hai, chiếm chỉ dưới 0,025%.</p>\r\n\r\n<p>Laurie Voss, đồng s&aacute;ng lập ki&ecirc;m gi&aacute;m đốc điều h&agrave;nh của NPM cho biết: &ldquo;<a href=\"https://techtalk.vn/single-page-app-voi-reactredux-nhung-thach-thuc-va-giai-phap.html\">React</a>&nbsp;&nbsp;đ&atilde; được ch&agrave;o đ&oacute;n nồng nhiệt bởi cộng đồng&rdquo;. Một phần của việc n&agrave;y phản &aacute;nh bản chất của n&oacute;; kh&ocirc;ng giống như c&aacute;c [framework kh&aacute;c], React kh&ocirc;ng phải l&agrave; giải ph&aacute;p to&agrave;n diện để x&acirc;y dựng một ứng dụng web. Thay v&agrave;o đ&oacute;, n&oacute; l&agrave; một giải ph&aacute;p được thiết kế tốt cho nhu cầu cụ thể của nhiều ứng dụng hiện nay.</p>\r\n\r\n<p>Voss cho biết: &ldquo;Kh&ocirc;ng thể bỏ qua sự tăng trưởng tổng thể của React&rdquo;. C&aacute;c nh&agrave; ph&aacute;t triển web đang nhiệt t&igrave;nh &aacute;p dụng React, v&agrave; c&aacute;c lĩnh vực kh&aacute;c như ph&aacute;t triển ứng dụng di động v&agrave; desktop cũng đang rất phấn khởi để sử dụng n&oacute;.&rdquo;</p>\r\n\r\n<p>Mặc cho sự xuất hiện của c&aacute;c front-end framework mới nổi:&nbsp; Backbone lại tiếp tục đi xuống. Từ gần 0,1% tải trong NPM năm năm trước, n&oacute; đ&atilde; giảm xuống chỉ c&ograve;n ở vị tr&iacute; thứ s&aacute;u phổ biến nhất, ph&iacute;a sau Angular 1,&nbsp;<strong><a href=\"https://techtalk.vn/angular-2-la-ky-nang-lap-trinh-duoc-yeu-thich-nhat-trong-nam-2018.html\">Angular 2</a></strong>&nbsp;v&agrave; Vue.</p>\r\n\r\n<p>T&igrave;m hiểu s&acirc;u hơn v&agrave;o hệ sinh th&aacute;i của React, c&aacute;c con số cho thấy một cộng đồng thịnh vượng v&agrave; nhiệt t&igrave;nh trong việc tạo ra c&aacute;c package gi&uacute;p cải thiện framework n&agrave;y hơn nữa. H&atilde;y lấy Preact như một v&iacute; dụ, một framework cung cấp cải tiến hiệu năng lớn d&agrave;nh cho c&aacute;c tr&igrave;nh duyệt cũ hơn. C&aacute;c khu&ocirc;n khổ kh&aacute;c li&ecirc;n quan đến React bao gồm React Router, Redux, v&agrave; RxJS.</p>\r\n\r\n<p>Voss cũng lưu &yacute; tầm quan trọng của số lượt download của một framework &ndash; một cộng đồng lớn sẽ gi&uacute;p framework duy tr&igrave; v&agrave; bền vững &ndash; nhưng mức tăng trưởng vẫn l&agrave; ch&igrave;a kh&oacute;a quyết định sự th&agrave;nh bại của n&oacute;. Về kh&iacute;a cạnh n&agrave;y, Preact, d&ugrave; vẫn c&ograve;n nhỏ b&eacute;, lại vượt mặt hầu hết c&aacute;c đ&agrave;n anh như Vue, React v&agrave; Ember.</p>\r\n', '2018-10-10 12:30:32', 6, 'shareit-1539173453.jpg', 2, 1, 10, 0),
(21, 'Review 5 Framework JavaScript thông dụng nhất trong 2018', 'Review 5 Framework JavaScript thông dụng nhất trong 2018', '<h2><strong>1. Vue JS</strong></h2>\r\n\r\n<p>Vue được đ&aacute;nh gi&aacute; như một ng&ocirc;i sao đang l&ecirc;n trong thế giới JS framework. Tr&ecirc;n GitHub, Vue JS được d&ugrave;ng cho tới 40.000 project trong năm 2017 (tăng từ 26.000 trong năm 2016). Gi&uacute;p cho Vue đứng hạng nhất trong nh&oacute;m c&aacute;c framework nổi bật nhất cho c&aacute;c dự &aacute;n JavaScript Github. Điều đặc biệt l&agrave; Vue chỉ mới được xuất hiện khoảng từ năm 2014, vậy tại sao lại c&oacute; sự đột biến đột ngột như vậy?</p>\r\n\r\n<p>Sự nổi tiếng của Vue c&oacute; thể được quy cho sự kết hợp của đơn giản v&agrave; linh hoạt. Bởi Vue sử dụng c&uacute; ph&aacute;p dựa tr&ecirc;n HTML n&ecirc;n c&aacute;c nh&agrave; ph&aacute;t triển c&oacute; thể sử dụng HTML để l&agrave;m việc với c&aacute;c template của Vue thay v&igrave; phải học một ng&ocirc;n ngữ cụ thể cho framework như TypeScript. Tuy vậy, d&ugrave; dễ học nhưng kh&ocirc;ng c&oacute; nghĩa l&agrave; n&oacute; ngh&egrave;o n&agrave;n, tr&aacute;i ngược lại Vue được xem l&agrave; một framework rất gi&agrave;u t&iacute;nh năng.</p>\r\n\r\n<p>Ngo&agrave;i việc dễ học, một phần sức h&uacute;t của Vue đến từ việc n&oacute; l&agrave; một incrementally progressive framework &ndash; n&oacute;i c&aacute;ch kh&aacute;c, sử dụng Vue kh&ocirc;ng c&oacute; nghĩa l&agrave; framework phải nằm b&ecirc;n dưới to&agrave;n bộ trang web hoặc ứng dụng của bạn. Thay v&agrave;o đ&oacute;, Vue JS framework c&oacute; thể được xem như một phần của trang web v&agrave; application. Hơn nữa, Vue c&ograve;n c&oacute; một cộng đồng t&iacute;ch cực m&agrave; bạn c&oacute; thể t&igrave;m hiểu th&ecirc;m từ trang&nbsp;<a href=\"https://vuejs.org/v2/guide/join.html\" rel=\"nofollow\" target=\"_new\">official Vue website</a>.</p>\r\n\r\n<h2><strong>2. React JS</strong></h2>\r\n\r\n<p>React đứng thứ hai sau Vue trong bản xếp hạng ​​của GitHub năm 2017, nhưng điều quan trọng cần lưu &yacute; l&agrave; React vốn c&oacute; tuổi đời v&agrave; sự hiện diện l&acirc;u hơn Vue. Bởi v&igrave; điều n&agrave;y, React c&oacute; một dấu ấn lớn với sự hỗ trợ v&agrave; ủng hộ của c&aacute;c c&ocirc;ng ty c&ocirc;ng nghệ lớn (bao gồm Facebook), cũng như l&agrave; c&oacute; hiện diện rất lớn trong thị trường việc l&agrave;m về JavaScript. Stack Overflow b&aacute;o c&aacute;o rằng c&aacute;c vị tr&iacute; y&ecirc;u cầu kỹ năng React tăng hơn 150% từ năm 2015 đến 2016, c&oacute; nghĩa l&agrave; nếu bạn quan t&acirc;m đến JavaScript th&igrave; sẽ phải biết về React .</p>\r\n\r\n<p>Về kh&iacute;a cạnh kỹ thuật, React v&agrave; Vue c&oacute; rất nhiều điểm tương đồng. React cũng l&agrave; một incrementally progressive framework, v&igrave; vậy &mdash; như Vue &mdash; React c&oacute; thể được &aacute;p dụng cho mọi dự &aacute;n của bạn khi thấy ph&ugrave; hợp. React JS framework được th&ecirc;m trực tiếp v&agrave;o c&aacute;c trang HTML v&agrave; từ đ&oacute; n&oacute; c&oacute; thể được mở rộng tr&ecirc;n to&agrave;n bộ trang hoặc chứa trong c&aacute;c tiện &iacute;ch JavaScript ri&ecirc;ng lẻ. Cũng giống như Vue, React l&agrave; một open-source framework v&agrave; c&oacute; một cộng đồng hỗ trợ mạnh mẽ. Bạn c&oacute; thể t&igrave;m tr&ecirc;n trang&nbsp;<a href=\"http://madewithreact.com/\" rel=\"nofollow\" target=\"_new\">Made with React</a>&nbsp;website để biết th&ecirc;m về c&aacute;c v&iacute; dụ về những dự &aacute;n được x&acirc;y dựng với React.</p>\r\n\r\n<h2><strong>3. Angular JS</strong></h2>\r\n\r\n<p>Angular l&agrave; một trong JavaScript framework đầu ti&ecirc;n, được ph&aacute;t triển bởi Google v&agrave; được ph&aacute;t h&agrave;nh lần đầu ti&ecirc;n v&agrave;o năm 2010. Trong khi c&ocirc;ng nghệ c&oacute; khuynh hướng đến v&agrave; đi theo d&ograve;ng thời gian, Angular vẫn tiếp tục duy tr&igrave; vị tr&iacute; h&agrave;ng đầu của m&igrave;nh trong GitHub. Qua đ&oacute; cho thấy sức mạnh của Angular đối với qu&aacute; tr&igrave;nh ph&aacute;t triển web. Hiện đang c&oacute; hơn 7.000 c&ocirc;ng việc lập tr&igrave;nh c&oacute; li&ecirc;n quan đến Angular.</p>\r\n\r\n<p>Dựa tr&ecirc;n những số liệu thống k&ecirc; n&agrave;y, ch&uacute;ng ta c&oacute; thể tin rằng Angular sẽ vẫn c&ograve;n trụ vững th&ecirc;m một thời gian d&agrave;i, nhưng đ&uacute;ng l&agrave; sự nổi tiếng của n&oacute; đang bị vượt qua bởi c&aacute;c đối thủ trẻ như Vue v&agrave; React. Điểm yếu của Angular ch&iacute;nh l&agrave; sự thiếu linh hoạt so với Vue v&agrave; React khi cả hai framework n&agrave;y đều c&oacute; thể mở rộng được, n&oacute;i c&aacute;ch kh&aacute;c ch&uacute;ng được thiết kế để c&oacute; thể sử dụng c&ugrave;ng bởi nhiều c&ocirc;ng cụ lập tr&igrave;nh kh&aacute;c. Mặt kh&aacute;c, khi Angular được d&ugrave;ng cho cho một dự &aacute;n, to&agrave;n bộ trang web hoặc ứng dụng cần được x&acirc;y dựng tr&ecirc;n Angular v&agrave; tu&acirc;n theo c&uacute; ph&aacute;p cũng như l&agrave; quy tắc của n&oacute;. Hơn nữa, bạn cũng phải học về TypeScript &ndash; khiến cho qu&aacute; tr&igrave;nh l&agrave;m quen với Angular c&agrave;ng kh&oacute; hơn. Mặc d&ugrave; thiếu linh hoạt, Angular vẫn l&agrave; một lựa chọn vững chắc cho lập tr&igrave;nh web trong năm 2018. Bạn c&oacute; thể xem th&ecirc;m về n&oacute; tại&nbsp;<a href=\"https://www.madewithangular.com/\" rel=\"nofollow\" target=\"_new\">Made With Angular</a>&nbsp;website.</p>\r\n\r\n<h2><strong>4. Ember JS</strong></h2>\r\n\r\n<p>Nếu bạn đ&atilde; từng sử dụng t&iacute;nh năng Apple Music th&ocirc;ng qua chương tr&igrave;nh iTunes của Apple th&igrave; bạn đ&atilde; sử dụng ứng dụng được x&acirc;y dựng với Ember. Ember lần đầu ti&ecirc;n được ph&aacute;t h&agrave;nh v&agrave;o năm 2011 v&agrave; được chuy&ecirc;n d&ugrave;ng để tạo ra c&aacute;c ứng dụng web v&agrave; di động c&oacute; quy m&ocirc; lớn. V&igrave; vậy m&agrave; Ember thường được c&aacute;c c&ocirc;ng ty lớn như Microsoft, Netflix v&agrave; LinkedIn sử dụng.</p>\r\n\r\n<p>Một trong những đặc điểm nổi bật của Ember l&agrave; n&oacute; đi k&egrave;m với một chuỗi c&ocirc;ng cụ ph&aacute;t triển t&iacute;ch hợp. Khi bạn sử dụng Ember framework, bạn cũng c&oacute; quyền truy cập v&agrave;o Broccoli.js (một c&ocirc;ng cụ dịch m&atilde; nguồn từ ng&ocirc;n ngữ n&agrave;y sang ng&ocirc;n ngữ kh&aacute;c), JSHint (một c&ocirc;ng cụ ph&acirc;n t&iacute;ch m&atilde; x&aacute;c định xem m&atilde; JS của bạn c&oacute; tu&acirc;n thủ c&aacute;c quy tắc m&atilde; h&oacute;a) hay LiveReload ( một c&ocirc;ng cụ gi&aacute;m s&aacute;t c&aacute;c thay đổi trong hệ thống tệp của dự &aacute;n v&agrave; tự động cập nhật nội dung tr&ecirc;n tr&igrave;nh duyệt web của bạn khi những thay đổi n&agrave;y được lưu). Mặc d&ugrave; Ember c&oacute; thể kh&ocirc;ng được sử dụng rộng r&atilde;i nhưng n&oacute; vẫn l&agrave; một framework l&agrave;m việc mạnh mẽ để học trong năm 2018 nếu bạn quan t&acirc;m đến việc ph&aacute;t triển c&aacute;c ứng dụng quy m&ocirc; lớn cho c&aacute;c c&ocirc;ng ty c&ocirc;ng nghệ lớn. H&atilde;y xem&nbsp;<a href=\"http://builtwithember.io/\" rel=\"nofollow\" target=\"_new\">Built With Ember</a>&nbsp;gallery nếu bạn muốn học về Ember framework.</p>\r\n\r\n<h2><strong>5. Node JS</strong></h2>\r\n\r\n<p>Giống như Ember, Node l&agrave; một JS framework chuy&ecirc;n d&ugrave;ng tr&ecirc;n c&aacute;c ứng dụng web c&oacute; quy m&ocirc; lớn. Lớn thế n&agrave;o? C&aacute;c c&ocirc;ng ty như PayPal, Netflix, Ebay v&agrave; WalMart đều d&ugrave;ng tới Node. Tuy nhi&ecirc;n, kh&ocirc;ng giống như Ember, Node ph&ugrave; hợp hơn với c&aacute;c framework như Vue, React v&agrave; Angular.</p>\r\n\r\n<p>Điều l&agrave;m cho Node ph&ugrave; hợp với c&aacute;c ứng dụng web lớn hơn (so với c&aacute;c trang web c&oacute; quy m&ocirc; nhỏ hơn) l&agrave; c&ocirc;ng cụ của Node cho ph&eacute;p JavaScript hoạt động tr&ecirc;n tr&igrave;nh duyệt web v&agrave; cả m&aacute;y t&iacute;nh (nơi JS thường bị giới hạn). Điều n&agrave;y cho ph&eacute;p Node thực hiện c&aacute;c chức năng kh&ocirc;ng chỉ chạy tr&ecirc;n &ldquo;client side&rdquo; của một ứng dụng (trong tr&igrave;nh duyệt web, hiển thị với người d&ugrave;ng), m&agrave; c&ograve;n ở ph&iacute;a &ldquo;server side&rdquo; &nbsp;(b&ecirc;n dưới trang web). Điều n&agrave;y c&oacute; nghĩa l&agrave; c&aacute;c nh&agrave; ph&aacute;t triển sử dụng Node c&oacute; thể sử dụng JavaScript cho cả front end v&agrave; back end function, v&agrave; ch&iacute;nh sự linh hoạt n&agrave;y l&agrave;m cho Node trở th&agrave;nh lựa chọn quen thuộc với c&aacute;c project c&oacute; quy m&ocirc; lớn.</p>\r\n', '2018-10-10 12:29:29', 6, 'shareit-1539173506.jpg', 1, 1, 10, 0),
(22, 'Giải thích 3 khái niệm khó trong Javascript cho phụ huynh', 'Closures trong JS không dễ để hiểu nhưng nó lại thường xuyên được hỏi trong các buổi phỏng vấn.', '<h3><strong>Closures</strong></h3>\r\n\r\n<p>Closures trong JS kh&ocirc;ng dễ để hiểu nhưng n&oacute; lại thường xuy&ecirc;n được hỏi trong c&aacute;c buổi phỏng vấn.</p>\r\n\r\n<p>Thường được gọi&nbsp;<strong>Lexical scoping&nbsp;</strong>hay&nbsp;<strong>Static scoping,</strong>&nbsp;closures l&agrave; một cơ chế trừu tượng cho ph&eacute;p bạn chia cắt c&aacute;c mối quan ngại một c&aacute;ch gọn g&agrave;ng.</p>\r\n\r\n<p><em>Một&nbsp;<em>closure</em>&nbsp;l&agrave; một h&agrave;m b&ecirc;n trong c&oacute; quyền truy cập v&agrave;o c&aacute;c biến của h&agrave;m b&ecirc;n ngo&agrave;i &ndash;  scope chain.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><strong>Promises</strong></h3>\r\n\r\n<p>Promise đại diện cho kết quả cuối c&ugrave;ng của một operation kh&ocirc;ng đồng bộ (asynchronous operation).</p>\r\n\r\n<h4><strong>Declaring một promise</strong></h4>\r\n\r\n<p>Promise c&oacute; thể thuộc một trong 3 trạng th&aacute;i sau:</p>\r\n\r\n<p>Pending&rarr; kết quả của promise vẫn chưa được x&aacute;c định, bởi v&igrave; operation kh&ocirc;ng đồng bộ sẽ tạo ra kết quả của n&oacute; chưa ho&agrave;n th&agrave;nh.</p>\r\n\r\n<p>Fulfilled &rarr; operation kh&ocirc;ng đồng bộ đ&atilde; ho&agrave;n th&agrave;nh v&agrave; promise c&oacute; gi&aacute; trị.</p>\r\n\r\n<p>Rejected &rarr; operation kh&ocirc;ng đồng bộ bị fail, v&agrave; promise sẽ kh&ocirc;ng bao giờ được đ&aacute;p ứng. Trong trạng th&aacute;i bị rejected, promise sẽ c&oacute; đưa ra l&yacute; do cho biết tại sao operation failed.</p>\r\n', '2018-10-10 12:29:33', 6, 'shareit-1539173561.jpg', 1, 1, 10, 0),
(23, 'Top 10 nguồn học JavaScript trực tuyến tốt nhất', 'Javascript là một trong những ngôn ngữ lập trình được quan tâm nhiều nhất dạo gần đây. ', '<p><em>Javascript l&agrave; một trong những ng&ocirc;n ngữ lập tr&igrave;nh được quan t&acirc;m nhiều nhất dạo gần đ&acirc;y. Mặc d&ugrave; n&oacute; hề dễ d&agrave;ng g&igrave;, nhưng h&atilde;y tin t&ocirc;i, n&oacute; cũng kh&ocirc;ng kh&oacute; lắm đ&acirc;u. Bạn n&ecirc;n c&acirc;n nhắc việc học ng&ocirc;n ngữ n&agrave;y nếu bạn l&agrave; người quan t&acirc;m đến vấn đề x&acirc;y dựng c&aacute;c ứng dụng web hoặc theo đuổi sự nghiệp ph&aacute;t triển web. Đặc biệt nếu bạn đ&atilde; từng học qua ng&ocirc;n ngữ n&agrave;y, hay đ&atilde; từng tham khảo n&oacute;, th&igrave; bạn c&agrave;ng n&ecirc;n đọc b&agrave;i viết n&agrave;y đấy.</em></p>\r\n\r\n<p><em>Ch&uacute;ng t&ocirc;i hiểu rằng, học tr&ecirc;n s&aacute;ch vở đ&ocirc;i khi kh&aacute; tốn k&eacute;m, chưa kể đến kh&ocirc;ng ph&ugrave; hợp. Thực tế, Internet cung cấp hầu hết lượng kiến thức cơ bản cho mọi ng&ocirc;n ngữ lập tr&igrave;nh m&agrave; bạn muốn học, bạn chỉ cần t&igrave;m th&ocirc;i.</em></p>\r\n\r\n<p><em>Trong b&agrave;i viết n&agrave;y, t&ocirc;i sẽ giới thiệu 10 t&agrave;i nguy&ecirc;n trực tuyến tốt nhất để học JavaScript.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h5>* Cho lập tr&igrave;nh vi&ecirc;n &ldquo;ch&acirc;n ướt ch&acirc;n r&aacute;o&rdquo;</h5>\r\n\r\n<h5>1.&nbsp;<strong><a href=\"http://jsforcats.com/#basics\" rel=\"noopener nofollow\" target=\"_blank\">JavaScript for cats</a></strong>&nbsp;</h5>\r\n\r\n<h5>Nếu bạn mới &ldquo;ch&acirc;n ướt ch&acirc;n r&aacute;o&rdquo; đến với Javascript th&igrave; đ&acirc;y l&agrave; nguồn t&agrave;i học ho&agrave;n hảo cho bạn.</h5>\r\n\r\n<p>**</p>\r\n\r\n<h5>* Cho lập tr&igrave;nh vi&ecirc;n mới bắt đầu</h5>\r\n\r\n<h5>2.&nbsp;<strong><a href=\"http://www.codecademy.com/en/tracks/javascript\" rel=\"noopener nofollow\" target=\"_blank\">Codecademy&rsquo;s JavaScript Track</a></strong>&nbsp;</h5>\r\n\r\n<h5>Codecademy l&agrave; một trong những t&agrave;i nguy&ecirc;n được kh&aacute; nhiều người mới tin tưởng. Đặc biệt, Codecademy c&oacute; ph&acirc;n chia cấp độ để bạn dễ d&agrave;ng lựa chọn kh&oacute;a học m&igrave;nh.</h5>\r\n\r\n<h5>3.<strong>&nbsp;<a href=\"https://www.udacity.com/course/ud804\" rel=\"noopener nofollow\" target=\"_blank\">Udacity&rsquo;s JavaScript Basics</a></strong>&nbsp;</h5>\r\n\r\n<h5>Rất c&oacute; thể bạn đ&atilde; bắt gặp Udacity ở đ&acirc;u đ&oacute; rồi đấy! V&igrave; đ&acirc;y l&agrave; một nguồn t&agrave;i nguy&ecirc;n trực tuyến kh&aacute; nổi d&agrave;nh cho người mới bắt đầu.</h5>\r\n\r\n<h5>4.&nbsp;<strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" rel=\"noopener nofollow\" target=\"_blank\">MDN JavaScript</a></strong>&nbsp;</h5>\r\n\r\n<h5>MDN Javascript cũng c&oacute; một số b&agrave;i học thiết kế th&acirc;n thiện d&agrave;nh ri&ecirc;ng cho người mới bắt đầu, bao gồm bảng ch&uacute; giải c&aacute;c h&agrave;m JavaScript. Bạn sẽ th&iacute;ch n&oacute; cho xem.</h5>\r\n\r\n<h5>5.<strong>&nbsp;<a href=\"http://www.learn-js.org/\" rel=\"noopener nofollow\" target=\"_blank\">Learn JS</a></strong>&nbsp;</h5>\r\n\r\n<h5>Learn JS l&agrave; một nguồn t&agrave;i nguy&ecirc;n miễn ph&iacute; nếu kh&ocirc;ng n&oacute;i tuyệt vời th&igrave; rất ph&iacute;. T&ocirc;i đ&aacute;nh gi&aacute; cao chức năng cho ph&eacute;p người học viết v&agrave; kiểm tra m&atilde; của họ tr&ecirc;n trang web thật sự.</h5>\r\n\r\n<h5>6.&nbsp;<strong><a href=\"https://www.khanacademy.org/\" rel=\"noopener nofollow\" target=\"_blank\">Khan Academy&nbsp;</a></strong>&nbsp;</h5>\r\n\r\n<h5>Khan Academy c&oacute; thể kh&ocirc;ng nổi như những nguồn kh&aacute;c, nhưng rất th&acirc;n thiện với người mới bắt đầu v&agrave; được khuyến kh&iacute;ch sử dụng cho những người chưa bao giờ thử bất kỳ ng&ocirc;n ngữ lập tr&igrave;nh n&agrave;o trước đ&acirc;y.</h5>\r\n', '2018-10-10 12:13:46', 6, 'shareit-1539173626.jpg', 0, 1, 10, 0),
(24, 'Những tool Javascript tốt nhất dành cho dân Frontend', 'Những tool Javascript tốt nhất dành cho dân Frontend', '<p>Javascript v&agrave; c&aacute;c c&ocirc;ng cụ giờ đ&atilde; quen thuộc với c&aacute;c lập tr&igrave;nh vi&ecirc;n. Liệu bạn đ&atilde; sử dụng c&aacute;c Javascript Tools được n&ecirc;u trong b&agrave;i viết n&agrave;y chưa?</p>\r\n\r\n<h2>Javascript Tools phổ biến nhất hiện nay</h2>\r\n\r\n<h3>Webpack</h3>\r\n\r\n<ul>\r\n	<li>Hơn 34,000 sao tr&ecirc;n Github</li>\r\n	<li>48 Plugins</li>\r\n	<li>22 Dependencies</li>\r\n</ul>\r\n\r\n<p>Đ&acirc;y l&agrave; một trong những c&ocirc;ng cụ tốt nhất để kết hợp nhiều package v&agrave; m&ocirc;i trường kh&aacute;c nhau, bao gồm cả file CSS v&agrave; ảnh, sau đ&oacute; tạo ra c&aacute;c module để chuyển th&agrave;nh đầu ra.&nbsp;<a href=\"https://webpack.js.org/\" rel=\"noopener nofollow\" target=\"_blank\">Webpack</a>&nbsp;mang lại c&aacute;c kết quả cuối c&ugrave;ng cho m&ocirc;i trường production v&agrave; khả năng t&aacute;i sử dụng, hơn nữa giảm thời gian load của c&aacute;c package ph&aacute;t triển bởi chia nhỏ ra th&agrave;nh m&ocirc; h&igrave;nh c&acirc;y v&agrave; load ch&uacute;ng v&agrave;o khi cần thực thi, gi&uacute;p giảm dung lượng bộ nhớ sử dụng.</p>\r\n\r\n<p>Webpack l&agrave; c&ocirc;ng cụ tương đối phổ biến. Bạn c&oacute; thể dễ d&agrave;ng t&igrave;m c&aacute;c t&agrave;i liệu sử dụng v&agrave; c&aacute;c hướng dẫn để kết hợp trong project của m&igrave;nh.</p>\r\n\r\n<h3>Grunt</h3>\r\n\r\n<ul>\r\n	<li>Hơn 11 ngh&igrave;n sao tr&ecirc;n GitHub</li>\r\n	<li>Hơn 6000 plugins</li>\r\n	<li>16 Dependencies</li>\r\n</ul>\r\n', '2018-10-10 12:14:54', 6, 'shareit-1539173694.jpg', 0, 1, 10, 0),
(25, 'TUYỆT CHIÊU ĐẢM BẢO TÍNH BẤT BIẾN TRONG JAVASCRIPT', 'Khi làm việc với React, hẳn bạn đã nghe đến tính bất biến của dữ liệu (immutability).', '<p>Khi l&agrave;m việc với React, hẳn bạn đ&atilde; nghe đến t&iacute;nh bất biến của dữ liệu (immutability). Đặc t&iacute;nh n&agrave;y, n&oacute;i một c&aacute;ch đơn giản, l&agrave; khả năng gi&aacute; trị của dữ liệu kh&ocirc;ng bị thay đổi sau khi đ&atilde; được khai b&aacute;o. T&iacute;nh bất biến gi&uacute;p cho chương tr&igrave;nh trở n&ecirc;n dễ dự đo&aacute;n, &iacute;t xảy ra lỗi v&agrave; trong một số trường hợp c&ograve;n tăng hiệu suất của ứng dụng. Do đ&oacute;, React (v&agrave; Redux) đều khuyến kh&iacute;ch mọi người viết code để hướng đến đặc t&iacute;nh n&agrave;y.</p>\r\n\r\n<p>Tuy vậy, nếu mới l&agrave;m quen với JavaScript v&agrave; React, c&oacute; thể bạn sẽ bỡ ngỡ kh&ocirc;ng biết l&agrave;m thế n&agrave;o cho &ldquo;chuẩn nhất&rdquo;. B&agrave;i viết dưới đ&acirc;y giới thiệu một số kỹ thuật gi&uacute;p bạn hướng đến immutability một c&aacute;ch dễ d&agrave;ng hơn. Ch&uacute;ng ta sẽ n&oacute;i về h&agrave;m thuần khiết, c&aacute;c thao t&aacute;c xử l&yacute; dữ liệu tr&ecirc;n mảng v&agrave; object. Cuối c&ugrave;ng, bạn c&oacute; thể &aacute;p dụng ngay những &ldquo;tuyệt chi&ecirc;u&rdquo; vừa học để x&acirc;y dựng một demo nhỏ bằng React.</p>\r\n\r\n<h3>Lu&ocirc;n d&ugrave;ng&nbsp;<code>const</code>&nbsp;khi khai b&aacute;o dữ liệu</h3>\r\n\r\n<p>Lời khuy&ecirc;n đầu ti&ecirc;n v&agrave; cũng l&agrave; căn bản nhất, lu&ocirc;n d&ugrave;ng&nbsp;<code>const</code>&nbsp;khi khai b&aacute;o. Chắc bạn cũng đ&atilde; biết,&nbsp;<code>let</code>&nbsp;v&agrave;&nbsp;<code>const</code>&nbsp;được giới thiệu từ phi&ecirc;n bản ES6, cho ph&eacute;p khai b&aacute;o biến c&oacute; tầm vực theo khối v&agrave; kh&ocirc;ng thực hiện hoisting. Điểm kh&aacute;c biệt giữa&nbsp;<code>let</code>&nbsp;v&agrave;&nbsp;<code>const</code>&nbsp;l&agrave; bạn c&oacute; thể thay đổi gi&aacute; trị của biến khai b&aacute;o với&nbsp;<code>let</code>, trong khi kh&ocirc;ng thể với&nbsp;<code>const</code>.</p>\r\n\r\n<p>Do đ&oacute;, trong hầu hết c&aacute;c trường hợp bạn n&ecirc;n khai b&aacute;o bằng&nbsp;<code>const</code>&nbsp;để tr&aacute;nh xảy ra lỗi khi gi&aacute; trị của khai b&aacute;o bị thay đổi bất ngờ. Cũng cần lưu &yacute; l&agrave; khi khai b&aacute;o objects với&nbsp;<code>const</code>, mặc d&ugrave; bạn kh&ocirc;ng thể g&aacute;n gi&aacute; trị mới cho object nhưng gi&aacute; trị của c&aacute;c thuộc t&iacute;nh vẫn c&oacute; thể bị thay đổi.</p>\r\n\r\n<h3>Thao t&aacute;c tr&ecirc;n object</h3>\r\n\r\n<p>Như vậy để thay đổi gi&aacute; trị của object m&agrave; vẫn đảm bảo t&iacute;nh chất bất biến, ch&uacute;ng ta cần sử dụng&nbsp;<code>Object.assign(target, ...sources)</code>. H&agrave;m n&agrave;y c&oacute; t&aacute;c dụng sao ch&eacute;p thuộc t&iacute;nh của c&aacute;c đối tượng&nbsp;<code>sources</code>&nbsp;v&agrave;o&nbsp;<code>target</code>. V&iacute; dụ như:</p>\r\n', '2018-10-10 12:16:07', 6, 'shareit-1539173767.jpg', 0, 1, 10, 0),
(26, 'Những thư viện và framework bạn không nên bỏ qua của JavaScript', 'JavaScript đã tồn tại hơn 20 năm, và là một trong những ngôn ngữ không ngừng phát triển.', '<p>JavaScript đ&atilde; tồn tại hơn 20 năm, v&agrave; l&agrave; một trong những ng&ocirc;n ngữ kh&ocirc;ng ngừng ph&aacute;t triển. Ng&ocirc;n ngữ n&agrave;y gần đ&acirc;y trải qua giai đoạn tăng trưởng rất nhanh, điều n&agrave;y l&agrave;m t&ocirc;i tự hỏi: liệu c&aacute;c kỹ thuật JavaScript cho front-end nổi bật hiện nay sau v&agrave;i năm nữa c&oacute; c&ograve;n được ch&uacute; &yacute; nữa kh&ocirc;ng.</p>\r\n\r\n<p>Tuy nhi&ecirc;n, quan trong l&agrave; lu&ocirc;n dẫn đầu cuộc chơi bằng c&aacute;ch sử dụng những c&ocirc;ng nghệ những c&ocirc;ng cụ v&agrave; framework mới nhất cho việc ph&aacute;t triển tốt hơn. B&agrave;i viết n&agrave;y kh&aacute;m ph&aacute; những thư vi&ecirc;n, framework JavaScript kh&aacute;c nhau v&agrave; c&aacute;c c&ocirc;ng cụ bạn n&ecirc;n c&acirc;n nhắc học ngay b&acirc;y giờ.</p>\r\n\r\n<h2>Giới thiệu</h2>\r\n\r\n<p>M&ocirc;i trường JavaScript đ&atilde; trở n&ecirc;n khổng lồ. N&oacute; c&oacute; hệ sinh th&aacute;i của ri&ecirc;ng n&oacute; với thư viện, frameworks, c&ocirc;ng cụ, c&aacute;c quản l&yacute; package v&agrave; c&aacute;c ng&ocirc;n ngữ mới để bi&ecirc;n dịch ra JavaScript. Thật th&uacute; vị, npm, l&agrave; một tr&igrave;nh quản l&yacute; package thực thụ cho JavaScript, cũng l&agrave; một software registry lớn nhất của thế giới. Đ&acirc;y l&agrave; một đoạn tr&iacute;ch từ một b&agrave;i viết xuất bản tr&ecirc;n&nbsp;<a href=\"https://www.linux.com/news/event/Nodejs/2016/state-union-npm\" rel=\"external noopener nofollow\" target=\"_blank\">Linux.com&nbsp;</a>v&agrave;o th&aacute;ng 1 2017.</p>\r\n\r\n<p>8 th&aacute;ng nhanh ch&oacute;ng tr&ocirc;i qua, v&agrave; hiện giờ c&oacute; 500,000 packages trong npm registry. L&agrave; một sự tăng trưởng khủng khiếp so với những package repo kh&aacute;c.</p>\r\n\r\n<p>L&agrave; một nh&agrave; ph&aacute;t triển front-end JavaScript, bắt kịp với những c&ocirc;ng cụ v&agrave; thư viện JavaScript thực sự rất quan trọng. Khi một c&ocirc;ng nghệ trở n&ecirc;n phổ biến, nhu cầu sẽ tăng cao, lần lượt n&oacute; sẽ l&agrave;m xuất hiện nhiều c&ocirc;ng việc lập tr&igrave;nh hơn với mức lương cao hơn trong ng&agrave;nh c&ocirc;ng nghiệp. V&igrave; vậy t&ocirc;i tập hợp một danh s&aacute;ch những kỹ thuật JavaScript t&ocirc;i nghĩ rằng bạn n&ecirc;n lưu t&acirc;m.</p>\r\n\r\n<h2>Những thư viện</h2>\r\n\r\n<p>Một thư viện l&agrave; c&aacute;c code c&oacute; thể sử dụng lại để thực hiện những chắc năng cụ thể. N&oacute; l&agrave; một tập hợp những h&agrave;m, đối tượng, v&agrave; class bạn c&oacute; thể d&ugrave;ng trong ứng dụng của bạn. Một thư viện t&aacute;ch ra những layer kh&aacute;c nhau v&igrave; thế bạn kh&ocirc;ng phải quan t&acirc;m đến c&aacute;c chi tiết khi triển khai.</p>\r\n\r\n<p>V&agrave; bạn c&oacute; thể gọi một h&agrave;m từ thư viện v&agrave; đưa c&aacute;c tham số, v&agrave; thư viện xử l&yacute; n&oacute; v&agrave; trả về quyền điều khiển cho bạn. Tuy nhi&ecirc;n, n&oacute; kh&ocirc;ng đặt để bất kỳ quy tắc n&agrave;o giới hạn c&aacute;ch bạn sử dụng thư viện đ&oacute;. Thư viện JavaScript phổ biến gồm c&oacute;:</p>\r\n', '2018-10-10 12:17:12', 6, 'shareit-1539173832.jpg', 0, 1, 10, 0),
(27, 'Xu hướng JavaScript đáng chú ý trong năm 2018', 'Gần đây, chúng tôi đã công bố kết quả được thu thập từ hơn 23.000 nhà phát triển về JavaScript. Cùng Techtalk điểm qua 10 sự kiện nổi bật, đáng chú ý về JavaScript.', '<h2># 1:&nbsp;<a href=\"https://techtalk.vn/single-page-app-voi-reactredux-nhung-thach-thuc-va-giai-phap.html\">React &ndash; bước v&agrave;o thời k&igrave; ho&agrave;ng kim&nbsp;</a></h2>\r\n\r\n<p>Như nhiều người đ&atilde; dự đo&aacute;n: React vẫn l&agrave; thư viện front-end phổ biến nhất trong 2017 v&agrave; xu hướng n&agrave;y vẫn tiếp tục cho tới nửa đầu 2018.</p>\r\n\r\n<p>Sự lan tỏa mạnh mẽ của React một phần đến từ việc Facebook đ&atilde; bỏ bằng độc quyền s&aacute;ng chế của họ,v&agrave; cho ph&eacute;p c&aacute;c developer c&oacute; thể tự do hơn trong việc sử dụng React.</p>\r\n\r\n<p>Với mức độ h&agrave;i l&ograve;ng của c&aacute;c developer đang ở mức cao nhất mọi thời đại, ch&uacute;ng ta c&oacute; thể an t&acirc;m rằng React vẫn sẽ giữ ng&ocirc;i vương vững chắc một thời gian nữa.</p>\r\n\r\n<h2># 2:&nbsp;<a href=\"https://techtalk.vn/angular-2-la-ky-nang-lap-trinh-duoc-yeu-thich-nhat-trong-nam-2018.html\">Angular</a>&nbsp;đảm nhiệm một vai tr&ograve; mới</h2>\r\n\r\n<p>Điều n&agrave;y kh&ocirc;ng c&oacute; nghĩa l&agrave; Angular đ&atilde; hết thời. Mặc d&ugrave; n&oacute; kh&ocirc;ng c&oacute; sức lan tỏa như React, Angular vẫn c&oacute; nhiều điểm ưu việt ri&ecirc;ng của m&igrave;nh.</p>\r\n\r\n<p>Thứ nhất, Angular c&oacute; &ocirc;ng lớn Google hỗ trợ ph&iacute;a sau. Bạn c&oacute; thể n&oacute;i những g&igrave; m&igrave;nh muốn nhưng kh&ocirc;ng thể phủ nhận rằng framework n&agrave;y đang được chăm s&oacute;c bởi những kĩ sư h&agrave;ng đầu.</p>\r\n\r\n<p>Cũng cần phải chỉ ra rằng Angular vẫn c&oacute; một lượng người d&ugrave;ng khổng lồ. C&aacute;c ng&acirc;n h&agrave;ng, ch&iacute;nh phủ v&agrave; c&ocirc;ng ty lớn kh&aacute;c kh&ocirc;ng thể thay đổi v&agrave; th&iacute;ch nghi nhanh ch&oacute;ng với sự thay đổi trong c&ocirc;ng nghệ, v&igrave; vậy n&ecirc;n họ thường dựa v&agrave;o Angular codebases vốn v&ocirc; c&ugrave;ng mạnh mẽ v&agrave; rộng lớn.</p>\r\n\r\n<p>Nhưng điều quan trọng nhất lại nằm ở mục ti&ecirc;u của Angular. Thay v&igrave; cố gắng chiến đấu React trực tiếp, Angular sẽ tập trung v&agrave;o thị trường doanh nghiệp. Chỉ cần nh&igrave;n v&agrave;o sự chấp nhận của Angular về TypeScript l&agrave; c&oacute; thể thấy r&otilde;: nh&oacute;m ph&aacute;t triển chấp nhận việc mất đi một số lượng người d&ugrave;ng phổ th&ocirc;ng để c&oacute; thể tập trung phục vụ cho đối tượng doanh nghiệp.</p>\r\n\r\n<h2># 3:&nbsp;<a href=\"https://techtalk.vn/vuejs-reactjs-nhung-chi-so-moi-nhat.html\">Vue.js</a>&nbsp;&ndash; kẻ khổng lồ bắt đầu vươn c&aacute;nh</h2>\r\n\r\n<p>Vue xuất hiện từ năm ngo&aacute;i trong thầm lặng v&agrave; chỉ sau một thời gian rất ngắn n&oacute; đ&atilde; chứng tỏ m&igrave;nh ch&iacute;nh l&agrave; mối đe dọa lớn nhất đối với &ldquo;&ocirc;ng ho&agrave;ng&rdquo; React. N&oacute; c&oacute; thể kh&ocirc;ng to lớn như Angular hoặc l&atilde;o l&agrave;ng như Ember, nhưng n&oacute; c&oacute; một thứ vũ kh&iacute; kh&aacute;c:&nbsp;<strong>đ&agrave; tăng trưởng</strong>.</p>\r\n\r\n<p>V&agrave; trong khi viễn cảnh Vue đ&aacute;nh bại React vẫn c&ograve;n rất xa, Vue vẫn tỏ ra vượt trội hơn trong việc cung cấp trải nghiệm tuyệt vời về framework, nhờ v&agrave;o c&aacute;c&nbsp;<a href=\"https://router.vuejs.org/en/\" rel=\"nofollow\" target=\"_new\">routing</a>&nbsp;v&agrave;&nbsp;<a href=\"https://github.com/vuejs/vuex\" rel=\"nofollow\" target=\"_new\">state management</a>&nbsp;libraries được duy tr&igrave; bởi ch&iacute;nh nh&oacute;m ph&aacute;t triển n&ograve;ng cốt của Vue.</p>\r\n\r\n<h2>Insight # 4:&nbsp;<a href=\"https://techtalk.vn/top-8-cong-viec-it-voi-muc-luong-khung-hon-200000-nam.html\">Kiến thức về một số thư viện sẽ gi&uacute;p bạn kiếm được nhiều tiền hơn</a>&nbsp;(nhưng kh&ocirc;ng phải v&igrave; những l&yacute; do như bạn nghĩ)</h2>\r\n\r\n<p>Bằng c&aacute;ch thu thập v&agrave; tham khảo ch&eacute;o dữ liệu về mức tiền lương, ch&uacute;ng t&ocirc;i đ&atilde; c&oacute; thể x&aacute;c định ra c&ocirc;ng nghệ n&agrave;o đang kiếm được nhiều nhất</p>\r\n', '2018-10-10 12:18:15', 6, 'shareit-1539173895.png', 0, 1, 10, 0),
(28, 'React là framework JavaScript được yêu thích nhất', 'NPM vừa tung ra báo cáo State of JavaScript cho năm 2018. Hàng loạt các chi tiết sẽ cung cấp một đánh giá hoàn chỉnh các xu hướng phát triển của JavaScript.', '<p>NPM vừa tung ra b&aacute;o c&aacute;o&nbsp;<a href=\"http://go.npm.me/state-of-javascript\" rel=\"nofollow\" target=\"_new\">State of JavaScript</a>&nbsp;cho năm 2018. H&agrave;ng loạt c&aacute;c chi tiết sẽ cung cấp một đ&aacute;nh gi&aacute; ho&agrave;n chỉnh c&aacute;c xu hướng ph&aacute;t triển của JavaScript.</p>\r\n\r\n<p>Laurie Voss, người đồng s&aacute;ng lập io COO v&agrave; l&agrave; t&aacute;c giả của b&agrave;i b&aacute;o c&aacute;o, cho biết: &ldquo;Cộng đồng JavaScript đang ph&aacute;t triển với tốc độ chưa từng c&oacute; trong lịch sử, v&agrave; npm registry cũng đang lớn mạnh kh&ocirc;ng ngừng&rdquo;. &Ocirc;ng n&oacute;i &ldquo;L&agrave; trung t&acirc;m ph&aacute;t triển ph&acirc;n phối JavaScript, ch&uacute;ng t&ocirc;i c&oacute; thể thấy xu hướng trong c&aacute;c nh&agrave; ph&aacute;t triển ứng dụng v&agrave; c&aacute;c c&ocirc;ng cụ họ sử dụng.&rdquo;</p>\r\n\r\n<p>B&aacute;o c&aacute;o đ&atilde; theo d&otilde;i một số xu hướng từ th&aacute;ng 11 năm 2016 đến th&aacute;ng 11 năm 2017.</p>\r\n\r\n<p>Theo b&aacute;o c&aacute;o, React đ&atilde; tăng tới 500 phần trăm. Điện thoại di động, ứng dụng desktop v&agrave; web đều đang sử dụng React. Preact, một thay thế bổ sung cho React, vốn tập trung v&agrave;o cải tiến hiệu suất, cũng c&oacute; ​​sự tăng trưởng với hơn 145%.</p>\r\n\r\n<p>&ldquo;Được giới thiệu v&agrave;o th&aacute;ng 3 năm 2013 bởi Facebook, React đ&atilde; được tiếp nhận rất nhanh. Đ&oacute; l&agrave; v&igrave; React như một giải ph&aacute;p được thiết kế tốt cho nhu cầu cụ thể m&agrave; nhiều ứng dụng c&oacute; v&agrave; kết hợp dễ d&agrave;ng với một số giải ph&aacute;p thay thế cho c&aacute;c bộ phận kh&aacute;c của ứng dụng. Do t&iacute;nh chất m&ocirc; đun n&agrave;y, React đ&atilde; tạo ra một hệ sinh th&aacute;i to&agrave;n bộ c&aacute;c packages li&ecirc;n quan để giải quyết c&aacute;c vấn đề của c&aacute;c phần kh&aacute;c của ứng dụng &ldquo;, b&aacute;o c&aacute;o cho biết.</p>\r\n\r\n<p>npm cũng ph&aacute;t hiện ra rằng Ember đang quay trở lại. Framework n&agrave;y được sử dụng bởi một số c&ocirc;ng ty lớn như Microsoft, Netflix v&agrave; Salesforce. Nhờ đ&oacute;, lượng tải xuống đ&atilde; tăng 45% trong năm ngo&aacute;i.</p>\r\n\r\n<p>Trong khi Angular được duy tr&igrave; ở mức phổ biến, n&oacute; kh&ocirc;ng được dự kiến ​​sẽ tiếp tục ph&aacute;t triển. Theo c&ocirc;ng ty, số lượt tải về của Angular chiếm khoảng 0,008 phần trăm của tất cả npm registry. Theo một b&aacute;o c&aacute;o, &ldquo;một package c&oacute; mức tăng trưởng &ldquo;cong&rdquo; n&agrave;y dường như kh&ocirc;ng phải l&agrave; sự lựa chọn tốt cho một dự &aacute;n mới, nhưng nguồn lực khổng lồ của Google v&agrave; sự ủng hộ li&ecirc;n tục từ cộng đồng c&oacute; nghĩa l&agrave; n&oacute; vẫn c&oacute; thể b&aacute;m trụ trong tương lai&rdquo;.</p>\r\n\r\n<p>Ở một kh&iacute;a cạnh kh&aacute;c, Vue c&oacute; c&ugrave;ng mức độ nổi tiếng như Ember and Angular, nhiều chuy&ecirc;n gia dự đo&aacute;n n&oacute; sẽ ph&aacute;t triển nhanh hơn nhiều so với c&aacute;c c&ocirc;ng cụ kh&aacute;c.</p>\r\n\r\n<p>Cuối c&ugrave;ng, b&aacute;o c&aacute;o cho thấy Webpack b&acirc;y giờ chiếm ưu thế để x&acirc;y dựng c&aacute;c ứng dụng web. Webpack chuyển đổi JavaScript th&agrave;nh m&atilde; c&oacute; thể được sử dụng bởi c&aacute;c browser. V&igrave; n&oacute; ph&aacute;t triển nhanh hơn cả React trong 2017, n&ecirc;n c&ocirc;ng ty tin rằng c&aacute;c developer cũng đang sử dụng Webpack để x&acirc;y dựng cho cả c&aacute;c ứng dụng kh&aacute;c.</p>\r\n\r\n<p>C&aacute;c ph&aacute;t hiện kh&aacute;c bao gồm: jQuery vẫn phổ biến, v&agrave; Backbone đang giảm dần.</p>\r\n\r\n<p>C&ocirc;ng ty hiện c&oacute; kế hoạch c&ocirc;ng bố nhiều hệ sinh th&aacute;i React v&agrave; ph&acirc;n t&iacute;ch về c&aacute;c backend framework cuối th&aacute;ng n&agrave;y.</p>\r\n', '2018-10-10 12:19:26', 6, 'shareit-1539173966.jpg', 0, 1, 10, 0),
(29, 'Tổng hợp các thư viện, xu hướng phát triển của JavaScript trong năm 2018', 'Tổng hợp các thư viện, xu hướng phát triển của JavaScript trong năm 2018', '<p>Trước hết, để cho bạn dễ h&igrave;nh dung th&igrave; c&oacute; thể hiểu rằng software đang thống trị thế giới. Trong đ&oacute;, web l&agrave; vua của software, m&agrave; JavaScript th&igrave; tạo n&ecirc;n web. Đ&oacute; l&agrave; xu hướng diễn ra trong những năm gần đ&acirc;y. Cho đến khi 2018 xuất hiện đ&aacute;nh dấu việc React &ldquo;nuốt trọn&rdquo; JavaScript.</p>\r\n\r\n<h3><strong>2018: Năm của React</strong></h3>\r\n\r\n<p>React vừa chiến thắng cuộc đua về độ phổ biến trong năm 2017. D&ugrave; vẫn c&ograve;n rất nhiều developer đang d&ugrave;ng Angular code bases:</p>\r\n\r\n<p>Nhưng với việc React li&ecirc;n tục d&agrave;nh được cảm t&igrave;nh của người d&ugrave;ng, n&oacute; nhanh ch&oacute;ng tăng tốc bỏ xa đối thủ.</p>\r\n\r\n<h4><strong>Vue.js l&agrave; g&igrave;? C&oacute; vẻ Hot</strong></h4>\r\n\r\n<p>Vue.js đ&atilde; c&oacute; một năm th&agrave;nh c&ocirc;ng trong 2017 v&agrave; được nhiều người quan t&acirc;m k&igrave; vọng. V&agrave; đ&uacute;ng như t&ocirc;i đ&atilde; dự đo&aacute;n, Vue.js cũng chẳng thể n&agrave;o lung lay được vị tr&iacute; của React trong năm cũ v&agrave; c&oacute; lẽ cũng sẽ kh&ocirc;ng c&oacute; thay đổi g&igrave; trong 2018. Tuy vậy n&oacute; vẫn c&oacute; khả năng chiến thắng Angular trong 2018:</p>\r\n\r\n<p>Vue.js vẫn đang ph&aacute;t triển nhanh hơn React. Thế th&igrave; n&oacute; c&oacute; g&igrave; kh&aacute;c so với React vs Angular v&agrave;o năm 2017?</p>\r\n\r\n<p>Đ&oacute; l&agrave; trong cuối năm 2016, thế giới JavaScript đ&atilde; sẵn s&agrave;ng cho một framework mới. C&ugrave;ng l&uacute;c đ&oacute;, người sử dụng Angular trở n&ecirc;n v&ocirc; c&ugrave;ng khổ sở trong khi React user lại rất h&agrave;i l&ograve;ng do đ&oacute;, c&oacute; rất nhiều người muốn học React v&agrave; rất &iacute;t người muốn học Angular. V&agrave;o cuối năm 2017, sự h&agrave;i l&ograve;ng của người d&ugrave;ng Angular ở mức 49%.</p>\r\n\r\n<p>C&acirc;u chuyện trở n&ecirc;n rất kh&aacute;c nhau đối với React vs Vue.js. React đang đ&aacute;nh bại Vue.js trong sự h&agrave;i l&ograve;ng của người d&ugrave;ng (93% đến 90%). Nguy&ecirc;n nh&acirc;n ch&iacute;nh khiến nhiều người bỏ React hồi v&agrave;o đầu năm 2017 l&agrave; do sự nhầm lẫn đối với giấy ph&eacute;p React. Facebook đ&atilde; nghe người d&ugrave;ng v&agrave; chuyển giấy ph&eacute;p.</p>\r\n', '2018-10-10 12:33:00', 6, 'shareit-1539174084.jpeg', 1, 1, 10, 0),
(30, 'thrgsefa', 'fjtdhrgfs', '<p>ỵthdrgsdf</p>\r\n', '2018-10-10 12:36:16', 8, 'shareit-post-1539174976.jpg', 0, 0, 10, 0);

-- --------------------------------------------------------

--
-- Table structure for table `user`
--

CREATE TABLE `user` (
  `id` int(11) NOT NULL,
  `email` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `password` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `fullname` varchar(150) COLLATE utf8_unicode_ci NOT NULL,
  `avatar` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `role` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `token` varchar(250) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Dumping data for table `user`
--

INSERT INTO `user` (`id`, `email`, `password`, `fullname`, `avatar`, `role`, `active`, `token`) VALUES
(5, 'thanhbui2727@gmail.com', '368de41ed2a4db7db9823917553cb152', 'Thanh Bui', '', 'mod', 1, '5ea1649a31336092'),
(6, 'vthanhbui272@gmail.com', '368de41ed2a4db7db9823917553cb152', 'admin', '', 'admin', 1, ''),
(7, 'thoatran@gmail.com', '368de41ed2a4db7db9823917553cb152', 'Thoa Tran', '', 'member', 1, ''),
(8, 'thainghia@gmail.com', '368de41ed2a4db7db9823917553cb152', 'Nghia Thai', 'shareit-avatar-1539167804.jpg', 'member', 1, ''),
(11, 'thanhthien@gmail.com', '368de41ed2a4db7db9823917553cb152', 'Thanh Thien', 'shareit-avatar-1538375954.jpg', 'mod', 1, ''),
(12, 'vinhhung@gmail.com', '368de41ed2a4db7db9823917553cb152', 'Vinh Hung', '', 'member', 1, '');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `background`
--
ALTER TABLE `background`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `cat`
--
ALTER TABLE `cat`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comment`
--
ALTER TABLE `comment`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `contact`
--
ALTER TABLE `contact`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `news`
--
ALTER TABLE `news`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `background`
--
ALTER TABLE `background`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT for table `cat`
--
ALTER TABLE `cat`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=21;

--
-- AUTO_INCREMENT for table `comment`
--
ALTER TABLE `comment`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=96;

--
-- AUTO_INCREMENT for table `contact`
--
ALTER TABLE `contact`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `news`
--
ALTER TABLE `news`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT for table `user`
--
ALTER TABLE `user`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
